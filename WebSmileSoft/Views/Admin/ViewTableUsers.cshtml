@{
    ViewData["Title"] = "Tabla";
}

<!-- Pantalla de carga -->
@* <div id="loadingScreen">
    <div id="loadingSpinner"></div>
</div> *@
<nav aria-label="breadcrumb" class="main-breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">@* <a asp-controller="Home" asp-action="Index">Inicio</a> *@Inicio</li>
        <li class="breadcrumb-item">Administracion de Usuarios</li>
        <li class="breadcrumb-item active" aria-current="page">
            CRUD Usuarios
        </li>
    </ol>
</nav>
<!-- Selectores de los tipos de Usuario a Listar -->
<div class=" my-2">
    <div class="row justify-content-end">
        <div class="col-12 text-end">
            <button onclick="verusers(1);" class="btn btn-primary btn-block">Administradores</button>
            <button onclick="verusers(2);" class="btn btn-danger btn-block">Doctores</button>
            <button onclick="verusers(3);" class="btn btn-warning btn-block">Pacientes</button>
        </div>

    </div>
</div>

<div class="card-body" id="content-container">
    <!-- Aquí va la tabla -->
    <div class="col-md-12 col-sm-10">
        <div class="card">
            <div class="card-header text-bg-primary mb-2">
                <span id="tableUsersRol"></span> de SmileSoft <i class="fas fa-users"> </i>
            </div>
            <div class="table-responsive shadow-lg">
                <table id="example" class="table table-hover"></table>
            </div>
            <div class="row justify-content-end mt-2">
                <div class="col-12 col-sm-3 text-end ">
                    <a class="btn btn-success btn-block add-user-btn" data-toggle="modal" data-target="#addUserModal"><i class="fas fa-user-plus"></i> Agregar Usuario</a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal de Edición -->
<partial name="EditUser" />

<!-- Modal Cambio Contraseña -->
<partial name="ChangePass" />

<!-- Modal Agregar Usuarios -->
<partial name="AddUsers" />



@section Scripts {

    <script>


        document.getElementById("tipoUsuarioed").addEventListener("change", function () {
            var campoOpcional = document.getElementById("campoOpcional");
            if (this.value === "2") {
                campoOpcional.style.display = "block";
            } else {
                campoOpcional.style.display = "none";
            }
        });

        document.getElementById("tipoUsuario").addEventListener("change", function () {
            var campoOpcional = document.getElementById("campoOpcionala");
            if (this.value === "2") {
                campoOpcional.style.display = "block";
            } else {
                campoOpcional.style.display = "none";
            }
        });
    </script>

    <script>

        //<!-- Script para Visualizar Lista De Usuarios en la Tabla -->
        //Recibir el parametro de la funcion verusers(1) para filtrar por tipo de usuario
        $(document).ready(function () {
            verusers(3);
            $("#loadingScreen").show();


        });

        //Funcion para visualizar la lista de usuarios en la tabla pasando como parametro el tipo de usuario
        function verusers(utID) {
            // Realizar solicitud AJAX para obtener la lista de usuarios
            // var utID = 1;
            mostrarCargando();
            let tableUsersRol = document.getElementById("tableUsersRol");

            // Cambia el contenido del span según el rol seleccionado
            if (utID === 1) {
                tableUsersRol.textContent = " Administradores ";
            } else if (utID === 2) {
                tableUsersRol.textContent = " Doctores ";
            } else if (utID === 3) {
                tableUsersRol.textContent = " Pacientes ";
            }

            $.ajax({
                url: sessionStorage.urlEP + '/api/Users/v1/ViewUsers',
                type: 'GET',
                data: { 'utID': utID },
                contentType: "application/json",
                dataType: 'json',
                success: function (data) {
                    $("#loadingScreen").hide();
                    //console.log("Respuesta del Servidor " + data);
                    // Procesar los datos recibidos y agregar filas a la tabla
                    let dataSet = [];
                    let users = data.itemJson;
                    //console.table(users);
                    let rolesMapping = {
                        1: 'Administrador',
                        2: 'Doctores',
                        3: 'Pacientes'
                    };
                    let BlockMapping = {
                        true: 'Desbloqueado',
                        false: 'Bloqueado'
                    };
                    let StatusMapping = {
                        true: 'Activo',
                        false: 'Inactivo'
                    };
                    let DocumentType = {
                        1: 'CC',
                        2: 'CE'
                        // 3: 'Tarjeta de Identidad (TI)'
                    }
                    $.each(data.itemJson, function (index, usuario) {
                        let rol = rolesMapping[usuario.utID];
                        let Block = BlockMapping[usuario.uIsBlocked];
                        let Status = StatusMapping[usuario.uStatus];
                        let DocumentT = DocumentType[usuario.dtID];
                        let rowData = [
                            index + 1,
                            usuario.uID,
                            rol,
                            usuario.uLoginName,
                            usuario.uName,
                            usuario.uLastName,
                            usuario.uEmailAddress,
                            usuario.uCellphone,
                            DocumentT,
                            usuario.uDocument,
                            //usuario.uIsBlocked,
                            //usuario.uStatus
                            Block,
                            Status
                        ];
                        dataSet.push(rowData);
                    });

                    // Inicializa o actualiza el DataTable con los datos procesados
                    table = $('#example').DataTable({
                        columns: [
                            { title: '#', visible: false },
                            { title: 'ID', visible: false },
                            { title: 'Rol', visible: false },
                            { title: 'Usuario' },
                            { title: 'Nombre' },
                            { title: 'Apellidos' },
                            { title: 'Correo Electronico' },
                            { title: 'Celular' },
                            { title: 'Tipo Documento', visible: false },
                            { title: 'Documento' },
                            { title: 'Bloqueado', visible: false },
                            { title: 'Estado' },
                            {
                                title: 'Acciones',
                                orderable: false, // Para desactivar la ordenación en esta columna
                                data: null, // Usaremos la columna "Acciones" solo para botones
                                defaultContent: '<button class="btn btn-primary btn-sm" id="btnEditar" data-toggle="modal" data-target="#editModal" data-toggle="tooltip" title="Editar Usuario"><i class="fas fa-edit"></i></button> ' +
                                    '<button class="btn btn-success btn-sm deactivate-button" id="btnDesactivar" data-toggle="modal" data-target="#deactivateModal" data-toggle="tooltip" title="Desactivar Usuario" > <i class="fas fa-ban"> </i></button > ' +
                                    '<button class="btn btn-danger btn-sm password-button" id="btnPassword" data-toggle="modal" data-target="#passwordModal" data-toggle="tooltip" title="Cambiar contraseña" > <i class="fa-solid fa-lock"></i></button > '

                            }
                        ],
                        // responsive: true,
                        // stateSave: true,
                        order: [[1, "desc"]],
                        data: dataSet,
                        dom: 'Bfrtip',
                        "dom": "<'dt--top-section'<'row'<'col-sm-12 col-md-6 d-flex justify-content-md-start justify-content-center'B><'col-sm-12 col-md-6 d-flex justify-content-md-end justify-content-center mt-md-0 mt-3'f>>>" +
                            "<'table-responsive'tr>" +
                            "<'dt--bottom-section d-sm-flex justify-content-sm-between text-center'<'dt--pages-count  mb-sm-0 mb-3'i><'dt--pagination'p>>",
                        buttons: {
                            buttons: [
                                { extend: 'copy', className: 'btn btn-sm' },
                                {
                                    extend: 'print', className: 'btn btn-sm',
                                    messageTop: 'Tabla de Usuarios SmileSoft',
                                },
                                {
                                    extend: 'spacer',
                                    style: 'bar',
                                    text: 'Exportar a:'
                                },
                                { extend: 'csv', className: 'btn btn-sm' },
                                { extend: 'excel', className: 'btn btn-sm' },
                            ]
                        },
                        select: true,
                        destroy: true,
                        language: {
                            url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json',
                        },

                    });

                    Swal.close();
                    //Editar Usuario --> Funcionando a Medias, No cambia Usuarios a Doctores
                    table.column(12).nodes().to$().find('#btnEditar').click(function () {
                        // Maneja la acción del botón aqui
                        let data = table.row($(this).parents('tr')).data();
                        let userId = data[1]; // la primera columna contiene el ID del usuario

                        $.ajax({
                            url: sessionStorage.urlEP + '/api/Users/v1/GetUserDetails',
                            type: 'GET',
                            data: { 'uID': userId },
                            contentType: "application/json",
                            dataType: 'json',
                            success: function (data) {
                                console.log("Cargando Respuesta")
                                console.log("Data:" + data.itemJson.uName);
                                //console.log(data.itemJson[0].uName);

                                if (data.itemJson === null) {
                                    mostrarMensajeError("No se cargo correctamente");
                                } else {
                                    let userData = data.itemJson; // Accede al primer elemento del arreglo
                                    actualizarFormulario(userData);
                                }
                            },
                            error: function (error) {
                                mostrarMensajeError('Error al obtener los detalles del usuario.');
                            }
                        });

                        // Funcion para actualizar el formulario con los datos del usuario
                        function actualizarFormulario(userData) {
                            let StatusMapping = {
                                1: 'Activo',
                                0: 'Inactivo'
                            };
                            // Supongamos que tienes la fecha en el formato "yyyy-MM-dd'T'HH:mm:ss"
                            let fechaCompleta = userData.uBirthDate;
                            let fechaSolo = null;
                            if (fechaCompleta !== null) {
                                fechaSolo = fechaCompleta.split('T')[0];
                            } else {
                                fechaSolo = userData.uBirthDate;
                            }

                            // Rellena los campos del formulario con los datos del usuario

                            //Datos Personales
                            $("#editNombree").val(userData.uName);
                            $("#editApellidoe").val(userData.uLastName);
                            $("#tipoDocumentoed").val(userData.dtID);
                            $("#editDocumentoed").val(userData.uDocument);
                            $("#tGeneroed").val(userData.gID);
                            $("#fechaNacimientoed").val(fechaSolo);

                            //Datos de Contacto
                            $("#editCorreoed").val(userData.uEmailAddress);
                            $("#direccioned").val(userData.uAddress);
                            $("#editCelulared").val(userData.uCellphone);
                            //Datos de Cuenta
                            $("#tipoUsuarioed").val(userData.utID);
                            $("#usernameed").val(userData.uLoginName);

                            //Datos de Estudios
                            $("#TituloAcademicoed").val(userData.dDegree);
                            $("#AcademicLeveled").val(userData.dAcademicLevel);
                            $("#Specialityed").val(userData.spID);
                            $("#ProfessionalLicenseed").val(userData.dProfessionalCard);
                            $("#Universitynameed").val(userData.dUniversityName);
                        }
                        // Abre el modal de edición
                        $("#editModal").modal("show");

                        const fechaNacimientoInput = document.getElementById('fechaNacimientoed');
                        onChangeAgeNotification(fechaNacimientoInput);

                        $("#saveChangesBtn").click(function () {
                            console.log("Save Changes");
                            let updatedUserData = {
                                // Recoge los datos actualizados desde los campos del formulario

                                //Datos Personales
                                uName: $("#editNombree").val(),
                                uLastName: $("#editApellidoe").val(),
                                dtID: parseInt($("#tipoDocumentoed").val()),
                                uDocument: $("#editDocumentoed").val(),
                                gID: parseInt($("#tGeneroed").val()),
                                uBirthDate: $("#fechaNacimientoed").val(),

                                //Datos de Contacto
                                uEmailAddress: $("#editCorreoed").val(),
                                uCellphone: $("#editCelulared").val(),
                                uAddress: $("#direccioned").val(),

                                //Datos de Cuenta
                                uLoginName: $("#usernameed").val(),
                                uID: userId,
                                utID: parseInt($("#tipoUsuarioed").val()),
                                uStatus: true,
                                oID: 1,
                                dAcademicLevel: null,
                                dDegree: null,
                                spID: null,
                                dProfessionalCard: null,
                                dUniversityName: null

                            }
                            if (updatedUserData.utID == 2) {
                                updatedUserData.dAcademicLevel = $("#AcademicLeveled").val();
                                updatedUserData.dDegree = $("#TituloAcademicoed").val();
                                updatedUserData.spID = parseInt($("#Specialityed").val());
                                updatedUserData.dProfessionalCard = $("#ProfessionalLicenseed").val();
                                updatedUserData.dUniversityName = $("#Universitynameed").val();
                            }

                            const esMayorDe18 = validarEdadMayorDe18('fechaNacimientoed');

                            if (updatedUserData.uName === "" || updatedUserData.uLastName === "") {
                                Swal.fire({
                                    text: 'Por favor, ingrese su nombre completo.',
                                    confirmButtonColor: '#008dc9'
                                });
                            }
                            else if (updatedUserData.dtID === "") {
                                Swal.fire({
                                    text: 'Por favor, ingrese su número de documento.',
                                    confirmButtonColor: '#008dc9'
                                });
                            }
                            else if (updatedUserData.uBirthDate === "") {
                                Swal.fire({
                                    text: 'Por favor, ingrese su fecha de nacimiento.',
                                    confirmButtonColor: '#008dc9'
                                });
                            }
                            else if (updatedUserData.gID === "Seleccionar" || updatedUserData.gID === "") {
                                Swal.fire({
                                    text: 'Por favor, seleccione su género.',
                                    confirmButtonColor: '#008dc9'
                                });
                            }
                            else if (updatedUserData.uAddress === "") {
                                Swal.fire({
                                    text: 'Por favor, ingrese su dirección.',
                                    confirmButtonColor: '#008dc9'
                                });
                            }
                            else if (updatedUserData.uCellphone === "") {
                                Swal.fire({
                                    text: 'Por favor, ingrese su número de celular o telefono.',
                                    confirmButtonColor: '#008dc9'
                                });
                            } else if (updatedUserData.uEmailAddress === "") {
                                Swal.fire({
                                    text: 'Por favor, ingrese su correo electrónico.',
                                    confirmButtonColor: '#008dc9'
                                });
                            } else if (updatedUserData.uLoginName === "") {
                                Swal.fire({
                                    text: 'Por favor, ingrese su usuario.',
                                    confirmButtonColor: '#008dc9'
                                });
                            } else if (!esMayorDe18) {
                                Swal.fire({
                                    text: 'No tienes la mayoría de edad, ponte en contacto con soporte.',
                                    confirmButtonColor: '#008dc9'
                                });
                            }

                            //let formattedBirthDate = formatDateToISO8601(birthDate);
                            else {
                                // Realiza una solicitud AJAX para guardar los cambios en el servidor
                                $.ajax({
                                    url: sessionStorage.urlEP + '/api/Users/v1/CreateUpdateUsers', // Reemplaza con la URL correcta
                                    type: 'POST',
                                    data: JSON.stringify(updatedUserData), // Convierte updatedUserData a JSON
                                    contentType: "application/json", // Especifica el tipo de contenido
                                    dataType: "json",
                                    success: function (response) {
                                        // Cierra el modal de edición
                                        $("#editModal").modal("hide");
                                        Swal.fire({
                                            title: 'Usuario Actualizado',
                                            text: 'El usuario ' + updatedUserData.uLoginName + ' se actualizó correctamente',
                                            icon: 'success',
                                            confirmButtonText: 'Aceptar'
                                        }).then((result) => {
                                            if (result.isConfirmed) {
                                                verusers(updatedUserData.utID);
                                            }
                                        })
                                    },
                                    error: function () {

                                        Swal.fire({
                                            title: 'Error',
                                            text: 'Error al guardar los cambios',
                                            icon: 'error',
                                            confirmButtonText: 'Aceptar'
                                        });
                                        $("#editModal").modal("hide");
                                    }
                                });
                            }
                        });
                    });
                    //Desactivar Estado --> Funcionando Bien
                    table.column(12).nodes().to$().find('#btnDesactivar').click(function () {
                        let StatusMappingI = {
                            Activo: 1,
                            Inactivo: 0
                        };
                        let rolesMappingI = {
                            Administrador: 1,
                            Doctores: 2,
                            Pacientes: 3
                        };
                        let data = table.row($(this).parents('tr')).data();
                        let userId = data[1];
                        let utID = data[2];
                        let loginName = data[3];
                        let userName = data[4] + ' ' + data[5];
                        let StatusI = StatusMappingI[data[11]];
                        let estadoActual = data[11];
                        console.log("Documento" + loginName + " User ID: " + userId);
                        console.log("Estado" + estadoActual);
                        console.log("Estado Mapeado " + StatusI)
                        let action = StatusI === 1 ? 'desactivar' : 'activar';
                        let uRol = rolesMappingI[utID];
                        // Muestra un mensaje de confirmación antes de realizar la acción
                        Swal.fire({
                            title: 'Estas seguro de ' + action + ' a:',
                            text: ' ' + userName + ' !',
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Si, ' + action,
                            cancelButtonText: 'Cancelar'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                let newStatus = StatusI === 1 ? 0 : 1;

                                // Realiza la solicitud AJAX para cambiar el estado del usuario
                                $.ajax({
                                    url: sessionStorage.urlEP + '/api/Users/v1/SetUserStatus/',
                                    type: 'GET',
                                    data: { 'uID': userId, 'uStatus': newStatus },
                                    contentType: "application/json",
                                    dataType: 'json',
                                    success: function (response) {
                                        console.log("Respuesta del Servidor " + response);
                                        console.log("Rol del Usuario desactivado " + uRol);
                                        Swal.fire({
                                            title: 'Usuario ' + action.charAt(0).toUpperCase() + action.slice(1), // Capitalizar la acción
                                            text: 'El usuario ' + loginName + ' se ' + action + 'ó correctamente',
                                            icon: 'success',
                                            confirmButtonText: 'Aceptar'
                                        });
                                        verusers(uRol);
                                    },
                                    error: function () {
                                        Swal.fire({
                                            title: 'Error',
                                            text: 'Error al ' + action + ' el usuario',
                                            icon: 'error',
                                            confirmButtonText: 'Aceptar'
                                        });
                                    }
                                });
                            }
                        });

                    });
                    //Cambiar contraseña Estado --> Funcionando Bien
                    table.column(12).nodes().to$().find('#btnPassword').click(function () {
                        // Maneja la acción del botón aqui
                        let data = table.row($(this).parents('tr')).data();

                        let userId = data[1]; // Supongamos que la primera columna contiene el ID del usuario
                        console.log("contraseña " + userId)
                        let userNameEdit = data[4] + ' ' + data[5];
                        let userRol = data[2];
                        let rolesMappingI = {
                            Administrador: 1,
                            Doctores: 2,
                            Pacientes: 3
                        };
                        let uRol = rolesMappingI[userRol];
                        //$("#usernamepass").val(userNameEdit);
                        var userNamePassSpan = document.getElementById("userNamePass");

                        // Establece el contenido del span
                        userNamePassSpan.innerHTML = userNameEdit;
                        // Abre el modal de edición
                        $("#editPassword").modal("show");


                        console.log("Usuario a Editar" + userId);
                        // Realiza una solicitud AJAX para obtener los detalles del usuario

                        $("#changePasswordBtn").click(function () {

                            let password = $("#newPassword").val();
                            if (!CheckPass(password)) {
                                Swal.fire({
                                    text: 'La contraseña no cumple con los requisitos.',
                                    confirmButtonColor: '#008dc9'
                                });
                            } else {
                                // Obtén los datos actualizados del formulario de edición
                                let updatedUserData = {
                                    // Recoge los datos actualizados desde los campos del formulario
                                    uID: userId,
                                    Password: password
                                };
                                // Realiza una solicitud AJAX para guardar los cambios en el servidor
                                $.ajax({
                                    url: sessionStorage.urlEP + '/api/Users/v1/ChangePassword', // Reemplaza con la URL correcta
                                    type: 'POST',
                                    data: JSON.stringify(updatedUserData), // Convierte updatedUserData a JSON
                                    contentType: "application/json", // Especifica el tipo de contenido
                                    dataType: "json",
                                    success: function (response) {
                                        // Cierra el modal de edición
                                        if (response.codeStatus == 0) {
                                            $("#editPassword").modal("hide");
                                            //window.location.href = '@Url.Action("Index", "")';
                                            Swal.fire({
                                                text: 'contraseña actualizada con exito',
                                                confirmButtonColor: '#008dc9'
                                            });
                                            verusers(uRol);
                                        } else {
                                            mostrarMensajeError(result.messageStatus);
                                        }
                                    },
                                    error: function () {
                                        // $("#editModal").modal("hide");
                                    }
                                });
                            }
                        });
                    });

                }
            });
        };


        $(".add-user-btn").click(function () {
            // Abre el modal de agregar usuario
            $("#addUserModal").modal("show");
        });

        // Aplica la función a los campos de celular y numero de documento
        $("#celular").on("input", function () {
            allowNumbersOnly(this);
        });

        $("#numeroDocumento").on("input", function () {
            allowNumbersOnly(this);
        });

        const fechaNacimientoInput = document.getElementById('fechaNacimiento');
        onChangeAgeNotification(fechaNacimientoInput);
        // Controlador de clic para el botón "Agregar"
        $("#add-user").click(function () {

            let userData = {
                //Datos Personales
                uName: $("#nombres").val(),
                uLastName: $("#apellidos").val(),
                dtID: parseInt($("#tipoDocumento").val()),
                uDocument: $("#numeroDocumento").val(),
                //gID: 0,//parseInt($("tGeneroe").val()),
                gID: $("#tipoGenero").val(),
                uBirthDate: $("#fechaNacimiento").val(),

                //Datos de Contacto
                uEmailAddress: $("#correo").val(),
                uCellphone: $("#celular").val(),
                uAddress: $("#direccion").val(),

                //Datos de Cuenta
                uLoginName: $("#usuario").val(),
                uPassword: $("#password").val(),
                uID: 0,
                utID: parseInt($("#tipoUsuario").val()),
                uStatus: true,
                oID: 1,
                dAcademicLevel: null,
                dDegree: null,
                spID: null,
                dProfessionalCard: null,
                dUniversityName: null
            };
            if (userData.utID == 2) {
                userData.dAcademicLevel = $("#AcademicLevela").val();
                userData.dDegree = $("#TituloAcademicoa").val();
                userData.spID = $("#Specialitya").val();
                userData.dProfessionalCard = $("#Tarjeta_Profesionala").val();
                userData.dUniversityName = $("#Universitynamea").val();
            }

            const esMayorDe18 = validarEdadMayorDe18('fechaNacimiento');

            if (userData.firstName === "" || userData.lastName === "") {
                Swal.fire({
                    text: 'Por favor, ingrese su nombre completo.',
                    confirmButtonColor: '#008dc9'
                });
            }
            else if (userData.dtID === "") {
                Swal.fire({
                    text: 'Por favor, ingrese su número de documento.',
                    confirmButtonColor: '#008dc9'
                });
            }
            else if (userData.uBirthDate === "") {
                Swal.fire({
                    text: 'Por favor, ingrese su fecha de nacimiento.',
                    confirmButtonColor: '#008dc9'
                });
            }
            else if (userData.gID === "Seleccionar" || userData.gID === "") {
                Swal.fire({
                    text: 'Por favor, seleccione su género.',
                    confirmButtonColor: '#008dc9'
                });
            }
            else if (userData.uAddress === "") {
                Swal.fire({
                    text: 'Por favor, ingrese su dirección.',
                    confirmButtonColor: '#008dc9'
                });
            }
            else if (userData.uCellphone === "") {
                Swal.fire({
                    text: 'Por favor, ingrese su número de celular o telefono.',
                    confirmButtonColor: '#008dc9'
                });
            } else if (userData.uEmailAddress === "") {
                Swal.fire({
                    text: 'Por favor, ingrese su correo electrónico.',
                    confirmButtonColor: '#008dc9'
                });
            } else if (userData.uLoginName === "") {
                Swal.fire({
                    text: 'Por favor, ingrese su usuario.',
                    confirmButtonColor: '#008dc9'
                });
            } else if (!esMayorDe18) {
                Swal.fire({
                    text: 'No tienes la mayoría de edad, ponte en contacto con soporte.',
                    confirmButtonColor: '#008dc9'
                });
            }

            //let formattedBirthDate = formatDateToISO8601(birthDate);
            else {
                $.ajax({
                    type: "POST",
                    url: sessionStorage.urlEP + '/api/Users/v1/CreateUpdateUsers', // Ruta para agregar el usuario
                    data: JSON.stringify(userData), // Convierte userData a JSON
                    contentType: "application/json", // Especifica el tipo de contenido

                    dataType: "json",
                    success: function (result) {
                        // Actualiza la vista o realiza alguna otra acción
                        $("#addUserModal").modal("hide");
                        //alert("Usuario agregado correctamente");
                        // Cierra el modal de agregar usuario
                        Swal.fire({
                            title: 'Usuario Agregado',
                            text: 'El usuario se agregó correctamente',
                            icon: 'success',
                            confirmButtonText: 'Aceptar'
                        });
                    },
                    error: function () {
                        //alert("Error al agregar el usuario");
                        Swal.fire({
                            title: 'Error',
                            text: result.messageCode,
                            icon: 'error',
                            confirmButtonText: 'Aceptar'
                        });
                    }
                });
            }
        });

        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();

        });
        function generateUsername() {
            const firstName = document.getElementById("nombres").value + '.';
            const lastName = document.getElementById("apellidos").value;

            // Combine the first name and last name to create the base username
            const baseUsername = (firstName + lastName).toLowerCase().replace(/\s/g, "");

            // Generate a random number between 1 and 999 (adjust the range as needed)
            const randomSuffix = Math.floor(Math.random() * 999) + 1;

            // Combine the base username with the random number
            const suggestedUsername = baseUsername + randomSuffix;

            // Update the username field with the suggested username
            document.getElementById("usuario").value = suggestedUsername;
        }
    </script>

    <script>
        // $(document).ready(function () {
        //     console.log("Cargando Especialidades");
        //     $.ajax({
        //         type: 'GET',
        //         url: '@ViewBag.urlEndPoint' + '/api/Generics/v1/GetSpecialities', // Ruta para crear o actualizar usuarios
        //         // contentType: 'application/json',
        //         success: function (response) {
        //             console.log(JSON.stringify(response));
        //             //console.log(JSON.parse(response));
        //             redirectView(JSON.stringify(response), "#Specialityed");
        //         }
        //     });
        // });
        // console.log('Enviando a la Vista');
        // function redirectView(item, element) {
        //     $.ajax({
        //         type: 'POST',
        //         url: '/Admin/ViewTableUsers',
        //         data: item,
        //         contentType: 'application/json',
        //         success: function (response) {
        //             $(element).html(response);
        //         }
        //     });
        // }
    </script>




    }
