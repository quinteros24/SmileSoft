
<nav aria-label="breadcrumb" class="main-breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"> @* <a asp-controller="Home" asp-action="Index">Inicio</a>  *@Inicio</li>
        <li class="breadcrumb-item">Sitio</li>
        <li class="breadcrumb-item active" aria-current="page">
            Ajustes del Sitio
        </li>
    </ol>
</nav>

<div class="row gutters-sm">
    <div class="col-md-4 d-none d-md-block">
        <div class="card">
            <div class="card-body">
                <nav class="nav flex-column nav-pills nav-gap-y-1">
                    <!-- Ajustes del Sitio -->
                    <a href="#sitesettings"
                       data-toggle="tab"
                       class="nav-item nav-link has-icon nav-link-faded">
                        <svg xmlns="http://www.w3.org/2000/svg"
                             width="24"
                             height="24"
                             viewBox="0 0 24 24"
                             fill="none"
                             stroke="currentColor"
                             stroke-width="2"
                             stroke-linecap="round"
                             stroke-linejoin="round"
                             class="feather feather-settings mr-2">
                            <circle cx="12" cy="12" r="3"></circle>
                            <path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"></path>
                        </svg> Ajustes del Sitio
                    </a>
                    <a href="#wpsettings"
                       data-toggle="tab"
                       class="nav-item nav-link has-icon nav-link-faded">
                        <svg xmlns="http://www.w3.org/2000/svg" height="1.5em" viewBox="0 0 384 512" style="fill: #008cce" class="feather feather-user mr-2" fill="none"
                             stroke="currentColor"
                             stroke-width="2"
                             stroke-linecap="round"
                             stroke-linejoin="round">
                            <circle cx="12" cy="12" r="3"></circle>
                            <path d="M256 48V64c0 17.7-14.3 32-32 32H160c-17.7 0-32-14.3-32-32V48H64c-8.8 0-16 7.2-16 16V448c0 8.8 7.2 16 16 16H320c8.8 0 16-7.2 16-16V64c0-8.8-7.2-16-16-16H256zM0 64C0 28.7 28.7 0 64 0H320c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V64zM160 320h64c44.2 0 80 35.8 80 80c0 8.8-7.2 16-16 16H96c-8.8 0-16-7.2-16-16c0-44.2 35.8-80 80-80zm-32-96a64 64 0 1 1 128 0 64 64 0 1 1 -128 0z" />
                        </svg> Ajustes de Contacto
                    </a>


                </nav>
            </div>
        </div>
        <div class="card shadow mb-4 my-2">
            <div class="card-header py-3">
                <h4 class="text-danger align-content-center fw-bold m-0">Importante!!</h4>
            </div>
            <div>
                <img class="w-100 img-fluid rounded" src="~/assets/img/anuncios/SmileSoft.png" alt="Slide Image">
            </div>
        </div>
    </div>
    <div class="col-md-8">
        <div class="card">
            <div class="card-header border-bottom mb-3 d-flex d-md-none">
                <ul class="nav nav-tabs card-header-tabs nav-gap-x-1"
                    role="tablist">
                    <li class="nav-item">
                        <a href="#sitesettings" data-toggle="tab" class="nav-link has-icon">
                            <svg xmlns="http://www.w3.org/2000/svg"
                                 width="24"
                                 height="24"
                                 viewBox="0 0 24 24"
                                 fill="none"
                                 stroke="currentColor"
                                 stroke-width="2"
                                 stroke-linecap="round"
                                 stroke-linejoin="round"
                                 class="feather feather-settings">
                                <circle cx="12" cy="12" r="3"></circle>
                                <path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"></path>
                            </svg>
                        </a>
                        <a href="#wpsettings" data-toggle="tab" class="nav-link has-icon">
                            <svg xmlns="http://www.w3.org/2000/svg" height="1.5em" viewBox="0 0 384 512" style="fill: #008cce" class="feather feather-user mr-2" fill="none"
                                 stroke="currentColor"
                                 stroke-width="2"
                                 stroke-linecap="round"
                                 stroke-linejoin="round">
                                <circle cx="12" cy="12" r="3"></circle>
                                <path d="M256 48V64c0 17.7-14.3 32-32 32H160c-17.7 0-32-14.3-32-32V48H64c-8.8 0-16 7.2-16 16V448c0 8.8 7.2 16 16 16H320c8.8 0 16-7.2 16-16V64c0-8.8-7.2-16-16-16H256zM0 64C0 28.7 28.7 0 64 0H320c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V64zM160 320h64c44.2 0 80 35.8 80 80c0 8.8-7.2 16-16 16H96c-8.8 0-16-7.2-16-16c0-44.2 35.8-80 80-80zm-32-96a64 64 0 1 1 128 0 64 64 0 1 1 -128 0z" />
                            </svg>
                        </a>
                    </li>


                </ul>
            </div>
            <div class="card-body tab-content">
                <!-- Ajustes del Sitio -->
                <div class="tab-pane active" id="sitesettings">
                    <h6>Opciones del Sitio</h6>
                    <hr />
                    <div class="card shadow mb-3">
                        <div class="card-header py-3">
                            <p class="text-primary m-0 fw-bold">Logos</p>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col">
                                    <form>

                                        <div class="mb-3">
                                            <label for="ChangeLogo" class="form-label"><span id="ChangeLogoLabel">Cambiar Logo del Login</span></label>
                                            <input class="form-control" type="file" id="ChangeLogo" accept=".jpg, .png" disabled>
                                            <div class="mb-3 my-2 "><button class="btn btn-primary btn-en-desarrollo" type="submit" disabled>Subir</button></div>

                                        </div>
                                    </form>
                                </div>
                                <div class="col">
                                    <form>
                                        <div class="mb-3">
                                            <label for="logoInput" class="form-label">Cambiar Logo Menu Principal</label>
                                            <input class="form-control" type="file" id="logoInput" accept=".jpg, .png">
                                            <div class="mb-3 my-2">
                                                <button class="btn btn-primary" type="button" id="updateLogo">Subir</button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card shadow mb-3">
                        <div class="card-header py-3">
                            <p class="text-primary m-0 fw-bold">Colores</p>
                        </div>
                        <div class="card-body">
                            <div class="row ">
                                <div class="col-md-6">
                                    <div class="card-body shadow align-content-center justify-content-center">
                                        <form>
                                            <div class="form-group">
                                                <label for="BackgroundColor" class="form-label"> Cambiar Color Fondo del Sitio</label>
                                                <input type="color" class="form-control form-control-color" id="BackgroundColor" value="#563d7c" title="Escoger Color" style="width: 6.5rem;">
                                            </div><button type="button" class="btn btn-primary my-2 btn-en-desarrollo">
                                                Actualizar
                                            </button>
                                        </form>
                                    </div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <div class="card-body shadow align-content-center justify-content-center">
                                        <form>
                                            <div class="form-group">
                                                <label for="SidebarColor">Cambiar Color de la Barra Lateral</label>
                                                <input type="color" class="form-control form-control-color" id="SidebarColor" value="#be1522" title="Escoger Color" style="width: 6.5rem;" />
                                            </div><button type="button" class="btn btn-primary my-2 btn-en-desarrollo">
                                                Actualizar
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <div class="card-body shadow align-content-center justify-content-center">
                                        <form>
                                            <div class="form-group">
                                                <label for="NavbarColor">Cambiar Color de la Barra Superior</label>
                                                <input type="color" class="form-control form-control-color" id="NavbarColor" value="#be1522" title="Escoger Color" style="width: 6.5rem;" />
                                            </div>
                                            <button type="button" class="btn btn-primary my-2 btn-en-desarrollo">
                                                Actualizar
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Fin Ajustes del -->

                <div class="tab-pane" id="wpsettings">
                    <h6>Ajustes de Contacto</h6>
                    <hr />
                    <div class="card shadow mb-3">
                        <div class="card-header py-3">
                            <p class="text-primary m-0 fw-bold">Whatsapp</p>
                        </div>
                        <div class="card-body shadow">
                            <div class="row ">
                                <div class="col-md-12">
                                    <div class="align-content-center justify-content-center">
                                        <form>
                                            <div class="form-group">
                                                <label for="wpNumber" class="form-label"> Cambiar Número Contacto Whatsapp</label>
                                                <input type="number" class="form-control" id="wpNumber">
                                            </div><button type="button" class="btn btn-primary my-2" id="updateWP">
                                                Actualizar
                                            </button>
                                        </form>
                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>
                    <!-- Formulario para agregar preguntas de historia clinica -->
                    <div class="card shadow mb-3">
                        <div class="card-header py-3">
                            <p class="text-primary m-0 fw-bold">Formulario historia clínica</p>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <h2 class="text-center">Creador dinámico de preguntas</h2>
                                <div class="form-group mb-2">
                                    <label for="question-type">Tipo de Pregunta:</label>
                                    <select class="form-control" id="question-type">
                                        <option value="open">Abierta</option>
                                        <option value="close">Cerrada</option>
                                        <option value="multiple">Multiple</option>
                                    </select>
                                </div>
                                <div class="form-group mb-2">
                                    <label for="question">Título de la pregunta:</label>
                                    <input type="text" class="form-control" id="question" />
                                </div>
                                <div class="form-group option-container mb-2 d-none ">
                                    <label for="options">Opciones:</label>
                                    <div id="options-container"></div>
                                    <button type="button" class="btn btn-primary mt-2" id="add-option">
                                        Agregar Opción
                                    </button>
                                </div>
                                <button type="button" class="btn btn-success mt-2 mb-2" id="add-question">
                                    Agregar pregunta
                                </button>
                                <h2 class=" mt-2 mb-2 text-center">Tu lista de preguntas configuradas</h2>

                                <form class="form-group mb-4" id="create-clinic-form-history"></form>

                                <button type="button" class="btn btn-success mt-2 mb-2 d-none" id="save-all-questions">
                                    Guardar todas las preguntas
                                </button>
                            </div>
                        </div>
                    </div>
                    <!-- FIN Formulario para agregar preguntas de historia clinica -->
                </div>

            </div>
        </div>
    </div>
</div>

@section Scripts{

    @* <script>
        // Agrega un manejador de eventos para la clase "btn-en-desarrollo"
        document.addEventListener("DOMContentLoaded", function () {
            const buttons = document.querySelectorAll(".btn-en-desarrollo");
            event.preventDefault();
            buttons.forEach(function (button) {
                button.addEventListener("click", function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Esta Función esta en Desarrollo!',
                        confirmButtonColor: '#008dc9'
                    })
                });
            });
        });

        $(document).on("click", ".remove-option", function () {
            $(this).closest(".input-group").remove();
        });

        $("#add-question").click(() => drawQuestions());

        function drawQuestions(firstLoad = false) {
            const type = $("#question-type").val();
            const name = $("#question").val();
            let options = null;

            if (type === "multiple") {
                options = [];
                $(".option-input").each(function () {
                    const optionValue = $(this).val();
                    if (optionValue.trim() !== "") {
                        options.push(optionValue);
                    }
                });
            }

            if (!name && !firstLoad) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Debes agregar una pregunta!',
                    confirmButtonColor: '#008dc9'
                })
                return;
            }

            const question = {
                id: structure.length + 1,
                type: type,
                name: name,
                options: options,
            };

            structure.push(question);

            console.log({ structure })

            if (structure.length) {
                $("#save-all-questions").removeClass("d-none");
                $("#save-all-questions").addClass("d-block");
            }

            if (!firstLoad) {
                $("#question-type").val('')
                $("#question").val('');
            }

            type === "multiple" && $(".input-group").remove();
            updateStructuredForm(structure);
        }

        // Grafico dinamicamente las preguntas dependiendo de su tipo
        function updateStructuredForm(struct) {
            console.log({ struct })
            let questionTypes = {
                'open': function (question) {
                    let inputField = $(`<input disabled placeholder="Pregunta abierta" type="text" id="${question.id}" class="form-control"></input><br>`);

                    let container = $('<div class="form-group"></div>').append(
                        `<label class="text-primary m-0 fw-bold" for="${question.id}">`
                        + `Pregunta abierta # ${question.id}: ` + question.name +
                        '</label><br>', inputField);

                    return container
                },
                'close': function (question) {

                    let checkBox1 = $(`<input disabled class="form-check-input" id="${question.id}" type="checkbox" onclick="toggleCheckboxes(this)">`).attr('name', "checkbox-close-question");

                    let label1 = $(`<label class="form-check-label" for="${question.id}">`).text("SI");

                    let checkBox2 = $(`<input disabled class="form-check-input" id="${question.id}0" type="checkbox" onclick="toggleCheckboxes(this)">`).attr('name', "checkbox-close-question");

                    let label2 = $(`<label class="form-check-label" for="${question.id}0">`).text("NO");

                    let container1 = $('<div class="form-check form-check-inline"></div>').append(checkBox1, label1);

                    let container2 = $('<div class="form-check form-check-inline"></div>').append(checkBox2, label2);

                    let container = $('<div class="mb-4 mt-2"></div>').append(`<p class="text-primary m-0 fw-bold">Pregunta cerrada # ${question.id}: ${question.name}</p>`, container1, container2);

                    return container;
                },
                'multiple': function (question) {
                    let options = $(`<select class="form-select" id="${question.id}" multiple></select>`);

                    question.options.forEach(function (option) {
                        options.append('<option disabled value="' + option + '">' + option + '</option>');
                    });

                    let container = $('<div class="mb-4"></div>').append(`<p class="text-primary m-0 fw-bold">Pregunta de opción múltiple # ${question.id}: ${question.name}</p>`, options)

                    return container
                }
            };

            let form = $('#create-clinic-form-history');
            form.empty();

            finalStructure = [];
            struct.forEach(function (question, index) {
                question.id = index + 1;
                let questionContainer = $(`<div class="question-${question.id}"></div>`);
                // inserta un boton para eliminar cada pregunta
                questionContainer.append(`<button type="button" class="btn btn-danger btn-sm mb-2" onclick="deleteQuestion(${question.id})">Eliminar</button>`);

                if (question.type in questionTypes) {
                    let inputElement = questionTypes[question.type](question);
                    finalStructure.push(question);
                    questionContainer.append(inputElement);
                    form.append(questionContainer);
                } else {
                    console.error('Tipo de pregunta no válido: ' + question.type);
                }
            });
        }

        // Función para eliminar una pregunta
        function deleteQuestion(id) {
            $(`.question-${id}`).remove();
            structure = structure.filter((question) => question.id !== id);
            updateStructuredForm(structure);
        }

        $(document).ready(function () {
            // Envío la petición con la estructura final
            $("#save-all-questions").click(() => {
                $.ajax({
                    url: sessionStorage.urlEP + '/api/Generics/v1/StoreUsersClinicStoryFormat?oID=1&jsonObject=' + JSON.stringify(finalStructure),
                    type: 'GET',
                    contentType: "application/json",
                    dataType: 'json',
                    success: function (response) {
                        console.log(response)
                        if (response.codeStatus == 0) {
                            Swal.fire({
                                title: response.messageStatus,
                                icon: 'info',
                                confirmButtonText: 'Aceptar'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    swal.close();
                                    location.reload();
                                }
                            })
                        }
                        else if (response.codeStatus == -1) {
                            Swal.fire({
                                title: 'Error',
                                text: response.messageStatus,
                                icon: 'error',
                                confirmButtonText: 'Aceptar'
                            })
                        }
                    },
                    error: function (error) {
                        console.log(error);
                    }

                }).then((result) => {
                    if (result.isConfirmed) {
                        location.reload();
                    }
                })
            });

        });


    </script> *@

    <script>

        let structure = [];

        $.ajax({
            url: sessionStorage.urlEP + '/api/Generics/v1/GetUsersClinicStoryFormat?oID=1',
            type: 'GET',
            contentType: "application/json",
            dataType: 'json',
            async: false,
            success: function ({ itemJson, codeStatus }) {
                if (codeStatus == 0) {
                    structure = JSON.parse(itemJson);
                }
                else if (response.codeStatus == -1) {
                    Swal.fire({
                        title: 'Error',
                        text: response.messageStatus,
                        icon: 'error',
                        confirmButtonText: 'Aceptar'
                    })
                }
            }
        })


        let finalStructure = [];
        structure.length && drawQuestions(true)
        // Agrega un manejador de eventos para la clase "btn-en-desarrollo"
        document.addEventListener("DOMContentLoaded", function () {
            const buttons = document.querySelectorAll(".btn-en-desarrollo");
            event.preventDefault();
            buttons.forEach(function (button) {
                button.addEventListener("click", function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Esta Función esta en Desarrollo!',
                        confirmButtonColor: '#008dc9'
                    })
                });
            });
        });
        $("#question-type").change(function () {
            if ($(this).val() === "multiple") {
                $(".option-container").addClass("d-block");
                $(".option-container").removeClass("d-none");
            } else {
                $(".option-container").addClass("d-none");
                $(".option-container").removeClass("d-block");
            }
        });

        $("#add-option").click(function () {
            $("#options-container").append(`
                                                                        <div class="input-group mb-2">
                                                                        <input type="text" class="form-control option-input" placeholder="Nombre de la opción">
                                                                        <div class="input-group-append">
                                                                            <button class="btn btn-danger remove-option" type="button">-</button>
                                                                        </div>
                                                                        </div>
                                                                    `);
        });

        $(document).on("click", ".remove-option", function () {
            $(this).closest(".input-group").remove();
        });

        $("#add-question").click(() => drawQuestions());

        function drawQuestions(firstLoad = false) {
            const type = $("#question-type").val();
            const name = $("#question").val();
            let options = null;

            if (type === "multiple") {
                options = [];
                $(".option-input").each(function () {
                    const optionValue = $(this).val();
                    if (optionValue.trim() !== "") {
                        options.push(optionValue);
                    }
                });
            }

            if (!name && !firstLoad) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Debes agregar una pregunta!',
                    confirmButtonColor: '#008dc9'
                })
                return;
            }

            const question = {
                id: structure.length + 1,
                type: type,
                name: name,
                options: options,
            };

            structure.push(question);

            console.log({ structure })

            if (structure.length) {
                $("#save-all-questions").removeClass("d-none");
                $("#save-all-questions").addClass("d-block");
            }

            if (!firstLoad) {
                $("#question-type").val('')
                $("#question").val('');
            }

            type === "multiple" && $(".input-group").remove();
            updateStructuredForm(structure);
        }

        // Grafico dinamicamente las preguntas dependiendo de su tipo
        function updateStructuredForm(struct) {
            console.log({ struct })
            let questionTypes = {
                'open': function (question) {
                    let inputField = $(`<input disabled placeholder="Pregunta abierta" type="text" id="${question.id}" class="form-control"></input><br>`);

                    let container = $('<div class="form-group"></div>').append(
                        `<label class="text-primary m-0 fw-bold" for="${question.id}">`
                        + `Pregunta abierta # ${question.id}: ` + question.name +
                        '</label><br>', inputField);

                    return container
                },
                'close': function (question) {

                    let checkBox1 = $(`<input disabled class="form-check-input" id="${question.id}" type="checkbox" onclick="toggleCheckboxes(this)">`).attr('name', "checkbox-close-question");

                    let label1 = $(`<label class="form-check-label" for="${question.id}">`).text("SI");

                    let checkBox2 = $(`<input disabled class="form-check-input" id="${question.id}0" type="checkbox" onclick="toggleCheckboxes(this)">`).attr('name', "checkbox-close-question");

                    let label2 = $(`<label class="form-check-label" for="${question.id}0">`).text("NO");

                    let container1 = $('<div class="form-check form-check-inline"></div>').append(checkBox1, label1);

                    let container2 = $('<div class="form-check form-check-inline"></div>').append(checkBox2, label2);

                    let container = $('<div class="mb-4 mt-2"></div>').append(`<p class="text-primary m-0 fw-bold">Pregunta cerrada # ${question.id}: ${question.name}</p>`, container1, container2);

                    return container;
                },
                'multiple': function (question) {
                    let options = $(`<select class="form-select" id="${question.id}" multiple></select>`);

                    question.options.forEach(function (option) {
                        options.append('<option disabled value="' + option + '">' + option + '</option>');
                    });

                    let container = $('<div class="mb-4"></div>').append(`<p class="text-primary m-0 fw-bold">Pregunta de opción múltiple # ${question.id}: ${question.name}</p>`, options)

                    return container
                }
            };

            let form = $('#create-clinic-form-history');
            form.empty();

            finalStructure = [];
            struct.forEach(function (question, index) {
                question.id = index + 1;
                let questionContainer = $(`<div class="question-${question.id}"></div>`);
                // inserta un boton para eliminar cada pregunta
                questionContainer.append(`<button type="button" class="btn btn-danger btn-sm mb-2" onclick="deleteQuestion(${question.id})">Eliminar</button>`);

                if (question.type in questionTypes) {
                    let inputElement = questionTypes[question.type](question);
                    finalStructure.push(question);
                    questionContainer.append(inputElement);
                    form.append(questionContainer);
                } else {
                    console.error('Tipo de pregunta no válido: ' + question.type);
                }
            });
        }

        // Función para eliminar una pregunta
        function deleteQuestion(id) {
            $(`.question-${id}`).remove();
            structure = structure.filter((question) => question.id !== id);
            updateStructuredForm(structure);
        }

        $(document).ready(function () {
            // Envío la petición con la estructura final
            $("#save-all-questions").click(() => {
                $.ajax({
                    url: sessionStorage.urlEP + '/api/Generics/v1/StoreUsersClinicStoryFormat?oID=1&jsonObject=' + JSON.stringify(finalStructure),
                    type: 'GET',
                    contentType: "application/json",
                    dataType: 'json',
                    success: function (response) {
                        console.log(response)
                        if (response.codeStatus == 0) {
                            Swal.fire({
                                title: response.messageStatus,
                                icon: 'info',
                                confirmButtonText: 'Aceptar'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    swal.close();
                                    location.reload();
                                }
                            })
                        }
                        else if (response.codeStatus == -1) {
                            Swal.fire({
                                title: 'Error',
                                text: response.messageStatus,
                                icon: 'error',
                                confirmButtonText: 'Aceptar'
                            })
                        }
                    },
                    error: function (error) {
                        console.log(error);
                    }


                }).then((result) => {
                    if (result.isConfirmed) {
                        location.reload();
                    }
                })
            });

        });

    </script>



    <script src="~/assets/js/sitemanagement.js"></script>
    @* <script>
        // Obtén el enlace de WhatsApp y el campo de entrada por sus IDs
        const wpNumberInput = document.getElementById("wpNumber");
        const urlAPIset = `${sessionStorage.urlEP}/api/Generics/v1/SetContactNumber?oID=1&number=`;
        // Agrega un escuchador de eventos al campo de entrada para detectar cambios
        updateWP.addEventListener("click", function () {
            // Obten el valor actual del campo de entrada
            const nuevoNumero = wpNumberInput.value;
            //Configurar numero whatsapp nuevo
            //api/Generics/v1/SetContactNumber?oID=1'  "3024224517"
            //oID=1&number=3024224517
            fetch(sessionStorage.urlEP + '/api/Generics/v1/SetContactNumber?oID=1', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(nuevoNumero)
            })
                .then(response => {
                    if (response.ok) {
                        return response.json();
                    } else {
                        throw new Error('Algo salió mal!');
                    }
                })
                .then(data => {
                    Swal.fire({
                        icon: 'success',
                        title: 'Actualizado!',
                        text: 'El número de Whatsapp ha sido actualizado',
                        confirmButtonColor: '#008dc9'
                    });
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: error.message,
                        confirmButtonColor: '#008dc9'
                    });
                });

        });

        fetch(sessionStorage.urlEP + '/api/Generics/v1/GetContactNumber?oID=1', {
            method: 'PUT'
        })
            .then(response => {
                if (response.ok) {
                    return response.json();
                } else {
                    throw new Error('Algo salió mal!');
                }
            })
            .then(data => {
                wpNumberInput.value = data.itemJson;
            })
            .catch(error => {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: error.message,
                    confirmButtonColor: '#008dc9'
                });
            });

    </script> *@
    <script src="~/assets/js/popper.js"></script>
    <script src="~/assets/js/bootstrap.min.js"></script>
    <script src="~/assets/js/theme.js"></script>
    <script type="text/javascript"></script>
}

