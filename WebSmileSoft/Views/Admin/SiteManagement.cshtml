@{
    ViewData["Title"] = "Site Management";
}
<nav aria-label="breadcrumb" class="main-breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"> Inicio</li>
        <li class="breadcrumb-item">Sitio</li>
        <li class="breadcrumb-item active" aria-current="page">
            Ajustes del Sitio
        </li>
    </ol>
</nav>

<div class="row gutters-sm">
    <div class="col-md-4 d-none d-md-block">
        <div class="card">
            <div class="card-body">
                <nav class="nav flex-column nav-pills nav-gap-y-1">
                    <!-- Ajustes del Sitio -->
                    <a href="#sitesettings" data-toggle="tab" class="nav-item nav-link has-icon nav-link-faded" id="sitesettingslink">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-settings mr-2">
                            <circle cx="12" cy="12" r="3"></circle>
                            <path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"></path>
                        </svg> Ajustes del Sitio
                    </a>
                    <a href="#wpsettings" data-toggle="tab" class="nav-item nav-link has-icon nav-link-faded" id="wpsettingslink">
                        <i class="fa-regular fa-address-book fa-lg"></i> Ajustes de Contacto
                    </a>
                    <a href="#questionsettings" data-toggle="tab" class="nav-item nav-link has-icon nav-link-faded" id="questionsettingslink">
                        <i class="fa-solid fa-notes-medical fa-lg"></i> Configurar Formulario
                    </a>
                    <a href="#logData" data-toggle="tab" class="nav-item nav-link has-icon nav-link-faded" id="logDatalink">
                        <i class="fa-solid fa-database"></i> Registros del Sitio
                    </a>
                </nav>
            </div>
        </div>
        <div class="card shadow mb-4 my-2">
            <div class="card-header py-3">
                <h4 class="text-danger align-content-center fw-bold m-0">Información!!</h4>
            </div>
            <div>
                <img class="w-100 img-fluid rounded" src="~/assets/img/anuncios/SmileSoft.png" alt="Slide Image">
            </div>
        </div>
    </div>
    <div class="col-md-8">
        <div class="card">
            <div class="card-header border-bottom mb-3 d-flex d-md-none">
                <ul class="nav nav-tabs card-header-tabs nav-gap-x-1"
                    role="tablist">
                    <li class="nav-item">
                        <a href="#sitesettings" data-toggle="tab" class="nav-link has-icon" id="sitesettingslink">
                            <svg xmlns="http://www.w3.org/2000/svg"
                                 width="24"
                                 height="24"
                                 viewBox="0 0 24 24"
                                 fill="none"
                                 stroke="currentColor"
                                 stroke-width="2"
                                 stroke-linecap="round"
                                 stroke-linejoin="round"
                                 class="feather feather-settings">
                                <circle cx="12" cy="12" r="3"></circle>
                                <path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"></path>
                            </svg><span>Opciones del Sitio</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#wpsettings" data-toggle="tab" class="nav-link has-icon" id="wpsettingslink">
                            <svg xmlns="http://www.w3.org/2000/svg" height="1.5em" viewBox="0 0 384 512" style="fill: #008cce" class="feather feather-user mr-2" fill="none"
                                 stroke="currentColor"
                                 stroke-width="2"
                                 stroke-linecap="round"
                                 stroke-linejoin="round">
                                <circle cx="12" cy="12" r="3"></circle>
                                <path d="M256 48V64c0 17.7-14.3 32-32 32H160c-17.7 0-32-14.3-32-32V48H64c-8.8 0-16 7.2-16 16V448c0 8.8 7.2 16 16 16H320c8.8 0 16-7.2 16-16V64c0-8.8-7.2-16-16-16H256zM0 64C0 28.7 28.7 0 64 0H320c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V64zM160 320h64c44.2 0 80 35.8 80 80c0 8.8-7.2 16-16 16H96c-8.8 0-16-7.2-16-16c0-44.2 35.8-80 80-80zm-32-96a64 64 0 1 1 128 0 64 64 0 1 1 -128 0z" />
                            </svg> <span>Ajustes de Contacto</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#questionsettings" data-toggle="tab" class="nav-link has-icon" id="questionsettingslink">
                            <svg xmlns="http://www.w3.org/2000/svg" height="1.5em" viewBox="0 0 384 512" style="fill: #008cce" class="feather feather-user mr-2" fill="none"
                                 stroke="currentColor"
                                 stroke-width="2"
                                 stroke-linecap="round"
                                 stroke-linejoin="round">
                                <circle cx="12" cy="12" r="3"></circle>
                                <path d="M96 352V96c0-35.3 28.7-64 64-64H416c35.3 0 64 28.7 64 64V293.5c0 17-6.7 33.3-18.7 45.3l-58.5 58.5c-12 12-28.3 18.7-45.3 18.7H160c-35.3 0-64-28.7-64-64zM272 128c-8.8 0-16 7.2-16 16v48H208c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h48v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V256h48c8.8 0 16-7.2 16-16V208c0-8.8-7.2-16-16-16H320V144c0-8.8-7.2-16-16-16H272zm24 336c13.3 0 24 10.7 24 24s-10.7 24-24 24H136C60.9 512 0 451.1 0 376V152c0-13.3 10.7-24 24-24s24 10.7 24 24l0 224c0 48.6 39.4 88 88 88H296z" />
                            </svg> <span>Configurar Formulario</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#logData" data-toggle="tab" class="nav-link has-icon" id="logDatalink">
                            <svg xmlns="http://www.w3.org/2000/svg" height="1.5em" viewBox="0 0 384 512" style="fill: #008cce" class="feather feather-user mr-2" fill="none"
                                 stroke="currentColor"
                                 stroke-width="2"
                                 stroke-linecap="round"
                                 stroke-linejoin="round">
                                <circle cx="12" cy="12" r="3"></circle>
                                <path d="M96 352V96c0-35.3 28.7-64 64-64H416c35.3 0 64 28.7 64 64V293.5c0 17-6.7 33.3-18.7 45.3l-58.5 58.5c-12 12-28.3 18.7-45.3 18.7H160c-35.3 0-64-28.7-64-64zM272 128c-8.8 0-16 7.2-16 16v48H208c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h48v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V256h48c8.8 0 16-7.2 16-16V208c0-8.8-7.2-16-16-16H320V144c0-8.8-7.2-16-16-16H272zm24 336c13.3 0 24 10.7 24 24s-10.7 24-24 24H136C60.9 512 0 451.1 0 376V152c0-13.3 10.7-24 24-24s24 10.7 24 24l0 224c0 48.6 39.4 88 88 88H296z" />
                            </svg> <span>Registros del Sitio</span>
                        </a>
                    </li>

                </ul>
            </div>
            <div class="card-body tab-content">
                <div class="tab-pane active" id="sitesettings">
                    <partial name="ViewSiteOptions" />
                </div>
                <div class="tab-pane" id="wpsettings">
                    <partial name="ViewWhatsapp" />
                </div>
                <div class="tab-pane" id="questionsettings">
                    <partial name="ViewQuestions" />
                </div>
                <div class="tab-pane" id="logData">
                    <h5 class="text-primary">Registros del Sitio</h5>
                    <hr />
                    @*  <partial name="ViewLog" /> *@
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{

    <script src="~/assets/js/sitemanagement.js"></script>

    <script>
        //cuando cargue el sitio carga la primer vista parcial
        // $(document).ready(function () {
        //     // Realiza una solicitud AJAX al controlador que devuelve la vista parcial
        //     $.ajax({
        //         url: '/Admin/ViewSiteOptions', // Reemplaza esto con la URL de tu acción del controlador
        //         type: 'GET',
        //         success: function (data) {
        //             // Actualiza el contenido del div con la vista parcial devuelta
        //             $('#sitesettings').html(data);
        //             //executeScripts();
        //         }
        //     });
        // });

        // $('#sitesettingslink').click(function () {
        //     // Realiza una solicitud AJAX al controlador que devuelve la vista parcial
        //     $.ajax({
        //         url: '/Admin/ViewSiteOptions', // Reemplaza esto con la URL de tu acción del controlador
        //         type: 'GET',
        //         success: function (data) {
        //             // Actualiza el contenido del div con la vista parcial devuelta
        //             $('#sitesettings').html(data);
        //             siteLayoutScript();
        //         }
        //     });
        // });
        // $('#wpsettingslink').click(function () {
        //     // Realiza una solicitud AJAX al controlador que devuelve la vista parcial
        //     $.ajax({
        //         url: '/Admin/ViewWhatsapp', // Reemplaza esto con la URL de tu acción del controlador
        //         type: 'GET',
        //         success: function (data) {
        //             // Actualiza el contenido del div con la vista parcial devuelta
        //             $('#wpsettings').html(data);
        //         }
        //     });
        // });
        // $('#questionsettingslink').click(function () {
        //     // Realiza una solicitud AJAX al controlador que devuelve la vista parcial
        //     $.ajax({
        //         url: '/Admin/ViewQuestions', // Reemplaza esto con la URL de tu acción del controlador
        //         type: 'GET',
        //         success: function (data) {
        //             // Actualiza el contenido del div con la vista parcial devuelta
        //             $('#questionsettings').html(data);
        //             questionStructureScript();
        //         }
        //     });
        // });
        $('#logDatalink').click(function () {
            // Realiza una solicitud AJAX al controlador que devuelve la vista parcial
            $.ajax({
                url: '/Admin/ViewLog', // Reemplaza esto con la URL de tu acción del controlador
                type: 'GET',
                success: function (data) {
                    // Actualiza el contenido del div con la vista parcial devuelta
                    $('#logData').html(data);
                    logDataScript();
                }
            });
        });

        // function siteLayoutScript() {
        let base64Image = '';

        $(document).ready(function () {
            fnGetDataSite(sessionStorage.getItem('userID'));
            // Get the color values from localStorage
            let backgroundColor = localStorage.getItem("backgroundColor");
            let topColor = localStorage.getItem("topColor");
            let sideColor = localStorage.getItem("sideColor");

            // Set the initial colors for each input
            document.getElementById("BackgroundColor").value = backgroundColor || "#563d7c";
            document.getElementById("SidebarColor").value = sideColor || "#be1522";
            document.getElementById("NavbarColor").value = topColor || "#be1522";
        });

        function fnGetDataSite(uID) {
            $.ajax({
                url: sessionStorage.urlEP + '/api/Generics/v1/GetDataSite?uID=' + uID,
                type: 'GET',
                contentType: "application/json",
                dataType: 'json',
                success: function (response) {
                    localStorage.setItem("urlImageLogin", response.itemJson.urlImageLogin);
                    localStorage.setItem("urlImageMenu", response.itemJson.urlImageMenu);
                    localStorage.setItem("backgroundColor", response.itemJson.backgroundColor);
                    localStorage.setItem("topColor", response.itemJson.topColor);
                    localStorage.setItem("sideColor", response.itemJson.sideColor);
                    $('#imgLogin').attr('src', response.itemJson.urlImageLogin);
                }
            });
        }

        function fnConvertToBase64(element) {
            if (element.files && element.files[0]) {
                let reader = new FileReader();

                reader.onload = function (e) {
                    const base64String = e.target.result;
                    base64Image = base64String;
                };

                reader.readAsDataURL(element.files[0]);
            }
        }

        function uploadImage(element, op) {
            let file = element.parentElement.previousElementSibling.files[0];

            let uID = sessionStorage.getItem('userID');
            let text = 'Menu';

            if (op == 1) text = 'Login';

            const formData = new FormData();
            formData.append("file", file);


            const uploadUrl = `${sessionStorage.urlEP}/api/Blobs/upload?citaID=0&genericName=ImageForOffice${text}_${uID}`;
            //Validar el input si no tiene nada mostrar alerta
            if (file == undefined) {
                //showMessage("Por favor seleccione una imagen.", "red");
                Swal.fire({
                    title: 'Error',
                    text: 'Por favor seleccione una imagen.',
                    icon: 'error',
                    confirmButtonText: 'Aceptar',
                    confirmButtonColor: '#008dc9'
                })
                return;
            } else if (file.type != 'image/jpeg' && file.type != 'image/png') {
                //showMessage("El formato de la imagen no es válido.", "red");
                Swal.fire({
                    title: 'Error',
                    text: 'El formato de la imagen no es válido.',
                    icon: 'error',
                    confirmButtonText: 'Aceptar',
                    confirmButtonColor: '#008dc9'
                })
                return;
            } else if (file.size > 2097152) {
                //showMessage("El tamaño de la imagen no puede superar los 2MB.", "red");
                Swal.fire({
                    title: 'Error',
                    text: 'El tamaño de la imagen no puede superar los 2MB.',
                    icon: 'error',
                    confirmButtonText: 'Aceptar',
                    confirmButtonColor: '#008dc9'
                })
                return;
            } else {

                $.ajax({
                    url: uploadUrl,
                    type: "POST",
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        fnUpdateDataOffice(op, response);
                    },
                    error: function () {
                        //showMessage("Error de red al cargar el archivo.", "red");
                        Swal.fire({
                            title: 'Error',
                            text: 'Por favor revise el formato de su archivo, e intente nuevamente.',
                            icon: 'error',
                            confirmButtonText: 'Aceptar',
                            confirmButtonColor: '#008dc9'
                        })
                    }
                });
            }

        }


        function fnUpdateDataOffice(op = 0, url = '') {
            if (op == 0) return;

            if ((op == 1 || op == 2) && base64Image == '') return;

            let route = '';
            let data = '';
            
            switch (op) {
                case 1:
                    route = 'SetDataSiteUrlImageLogin';
                    data = url;
                    break;

                case 2:
                    route = 'SetDataSiteUrlImageMenu';
                    data = url;
                    break;

                case 3:
                    route = 'SetDataSiteBackgroundColor';
                    data = $('#BackgroundColor').val();
                    data = data.replace('#', '%23');
                    break;

                case 4:
                    route = 'SetDataSiteTopColor';
                    data = $('#NavbarColor').val();
                    data = data.replace('#', '%23');
                    break;

                case 5:
                    route = 'SetDataSiteSideColor';
                    data = $('#SidebarColor').val();
                    data = data.replace('#', '%23');
                    break;

                default:
                    route = '';
            }

            if (route == '') return;

            let uID = sessionStorage.getItem('userID');

            $.ajax({
                url: `${sessionStorage.urlEP}/api/Generics/v1/${route}?uID=${uID}&data=${data}`,
                type: 'GET',
                contentType: "application/json",
                dataType: 'json',
                success: function (response) {
                    if (response.codeStatus == '-1') {
                        Swal.fire({
                            title: 'Ups...',
                            text: response.messageStatus,
                            icon: 'warning',
                            confirmButtonText: 'Aceptar',
                            confirmButtonColor: '#008dc9'
                        });
                        return;
                    }
                    Swal.fire({
                        title: '',
                        text: response.messageStatus,
                        icon: 'success',
                        confirmButtonText: 'Aceptar',
                        confirmButtonColor: '#008dc9'
                    });
                    //Refrescar Sitio Web
                    location.reload();
                },
            });

        }


        let structure = [];
        function getUsersClinicStoryFormat() {
            $.ajax({
                url: `${sessionStorage.urlEP}/api/Generics/v1/GetUsersClinicStoryFormat?oID=1`,
                type: 'GET',
                dataType: 'json',
                contentType: 'application/json',
                async: false,
                success: function (response) {
                    //const { itemJson, codeStatus } = response;

                    if (response.codeStatus == 0) {
                        ////console.log("response.itemJson: ", response.itemJson);
                        structure = [];
                        structure = JSON.parse(response.itemJson);
                        ////console.log('Structure Json respond: ', structure);
                        ////console.log('Structure Json respond Long: ', structure.length);
                    } else if (response.codeStatus == -1) {
                        Swal.fire({
                            title: 'Error',
                            text: response.messageStatus,
                            icon: 'error',
                            confirmButtonText: 'Aceptar',
                            confirmButtonColor: '#008dc9'
                        });
                    }
                },
                error: function (error) {
                    console.error('There was a problem with the AJAX request:', error);
                }
            });
        }

        getUsersClinicStoryFormat();


        // $.ajax({
        //     url: sessionStorage.urlEP + '/api/Generics/v1/GetUsersClinicStoryFormat?oID=1',
        //     type: 'GET',
        //     contentType: "application/json",
        //     dataType: 'json',
        //     async: false,
        //     success: function ({ itemJson, codeStatus }) {
        //         if (codeStatus == 0) {
        //             structure2 = itemJson; //Test
        //             //structure = JSON.parse(itemJson);
        //             structure = JSON.parse(itemJson).filter(item => item !== null);
        //         }
        //         else if (response.codeStatus == -1) {
        //             Swal.fire({
        //                 title: 'Error',
        //                 text: response.messageStatus,
        //                 icon: 'error',
        //                 confirmButtonText: 'Aceptar'
        //             })
        //         }
        //     }
        // })

        let finalStructure = [];
       
        structure.length && drawQuestions(true)
        
        $("#question-type").change(function () {
            if ($(this).val() === "multiple") {
                $(".option-container").addClass("d-block");
                $(".option-container").removeClass("d-none");
            } else {
                $(".option-container").addClass("d-none");
                $(".option-container").removeClass("d-block");
            }
        });

        $("#add-option").click(function () {
            $("#options-container").append(`
                                                                                                                                                                                                                                       <div class="input-group mb-2">
                                                                                                                                                                                                                                       <input type="text" class="form-control option-input mx-1" placeholder="Nombre de la opción">
                                                                                                                                                                                                                                       <div class="input-group-append">
                                                                                                                                                                                                                                           <button class="btn btn-danger remove-option" type="button">-</button>
                                                                                                                                                                                                                                       </div>
                                                                                                                                                                                                                                       </div>
                                                                                                                                                                                                                                    `);
        });
        $(document).on("click", ".remove-option", function () {
            $(this).closest(".input-group").remove();
        });

        $("#add-question").click(() => drawQuestions());

        function drawQuestions(firstLoad = false) {
            ////console.log("Cargar Preguntas");

            const type = $("#question-type").val();
            const name = $("#question").val();
            let options = null;

            if (type === "multiple") {
                options = [];
                $(".option-input").each(function () {
                    const optionValue = $(this).val();
                    if (optionValue.trim() !== "") {
                        options.push(optionValue);
                    }
                });
            }

            if (!name && !firstLoad) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Debes agregar una pregunta!',
                    confirmButtonColor: '#008dc9'
                })
                return;
            }
            const question = {
                id: structure.length + 1,
                type: type,
                name: name,
                options: options,
            };

            structure.push(question);

            if (structure.length) {
                $("#save-all-questions").removeClass("d-none");
                $("#save-all-questions").addClass("d-block");
            }
            if (!firstLoad) {
                $("#question-type").val('')
                $("#question").val('');
            }

            type === "multiple" && $(".input-group").remove();

            //Eliminar Pregunta Fantasma
            if (firstLoad) {
                structure.pop();
            }
            updateStructuredForm(structure);
        }

        // Grafico dinamicamente las preguntas dependiendo de su tipo
        function updateStructuredForm(struct) {
            ////console.log({ struct })
            let questionTypes = {
                'open': function (question) {
                    let inputField = $(`<input disabled placeholder="Pregunta abierta" type="text" id="${question.id}" class="form-control"></input><br>`);

                    let container = $('<div class="form-group"></div>').append(
                        `<label class="text-primary m-0 fw-bold" for="${question.id}">`
                        + `Pregunta abierta # ${question.id}: ` + question.name +
                        '</label><br>', inputField);

                    return container
                },
                'close': function (question) {

                    let checkBox1 = $(`<input disabled class="form-check-input" id="${question.id}" type="checkbox" onclick="toggleCheckboxes(this)">`).attr('name', "checkbox-close-question");

                    let label1 = $(`<label class="form-check-label" for="${question.id}">`).text("SI");

                    let checkBox2 = $(`<input disabled class="form-check-input" id="${question.id}0" type="checkbox" onclick="toggleCheckboxes(this)">`).attr('name', "checkbox-close-question");

                    let label2 = $(`<label class="form-check-label" for="${question.id}0">`).text("NO");

                    let container1 = $('<div class="form-check form-check-inline"></div>').append(checkBox1, label1);

                    let container2 = $('<div class="form-check form-check-inline"></div>').append(checkBox2, label2);

                    let container = $('<div class="mb-1 mt-2"></div>').append(`<p class="text-primary m-0 fw-bold">Pregunta cerrada # ${question.id}: ${question.name}</p>`, container1, container2);

                    return container;
                },
                'multiple': function (question) {
                    let options = $(`<select class="form-select" id="${question.id}" multiple></select>`);

                    question.options.forEach(function (option) {
                        options.append('<option disabled value="' + option + '">' + option + '</option>');
                    });

                    let container = $('<div class="mb-1"></div>').append(`<p class="text-primary m-0 fw-bold">Pregunta de opción múltiple # ${question.id}: ${question.name}</p>`, options)

                    return container
                },
                //<div class="mb-3">
                //< label for= "logoInput" class= "form-label" > Cambiar Logo Menu Principal < /label>
                //< input class="form-control" type = "file" id = "logoInput" accept = ".jpg, .png" onchange = "fnConvertToBase64(this)" >
                //<div class="mb-3 my-2" >
                //<button class="btn btn-primary mx-4" type = "button" id = "updateLogo" onclick = "uploadImage(this, 2)" > Subir < /button><span class="text-primary">*Tamaño recomendado de 140x70px*</span >
                //< /div>
                'fileUpload': function (question) {
                    let inputField = $(`<input disabled placeholder="Imagen" type="file" id="${question.id}" accept=".jpg , .png" class="form-control"></input><br>`);

                    let container = $('<div class="form-group"></div>').append(
                        `<label class="text-primary m-0 fw-bold" for="${question.id}">`
                        + `Imagen # ${question.id}: ` + question.name +
                        '</label><br>', inputField, `<button class="btn btn-primary btnFileC" type="button" id="${question.name + question.id}" disabled> Subir </button>`);

                    return container
                }
            };

            let form = $('#create-clinic-form-history');
            form.empty();

            finalStructure = [];
            // //console.log('Struct: ', struct);
            // //console.log('Struct: ', struct.length);


            struct.forEach(function (question, index) {
                ////console.log('Index:', index);
                question.id = index + 1;
                let questionContainer = $(`<div class="question-${question.id}"></div>`);
                ////console.log('Index Question: ', question.id);
                if (question.type in questionTypes) {
                    let inputElement = questionTypes[question.type](question);
                    finalStructure.push(question);

                    questionContainer.append(inputElement);

                    // Insert the "Eliminar" button below the input element
                    questionContainer.append(`<div class="d-flex justify-content-end"><button type="button" class="btn btn-danger btn-sm mb-2" onclick="deleteQuestion(${question.id})">Eliminar</button></div><hr/>`);

                    form.append(questionContainer);
                } else {
                    console.error('Tipo de pregunta no válido: ' + question.type);
                }
            });


        }
        // Función para eliminar una pregunta
        function deleteQuestion(id) {
            $(`.question-${id}`).remove();
            structure = structure.filter((question) => question.id !== id);
            updateStructuredForm(structure);
        }
        // let finalStructure2 =     [
        //         {
        //             "id": 1,
        //             "type": "open",
        //             "name": "Por qué asistió a la consulta?",
        //             "options": null
        //         },
        //         {
        //             "id": 2,
        //             "type": "open",
        //             "name": "Consultó antes con algún otro profesional?",
        //             "options": null
        //         },
        //         {
        //             "id": 3,
        //             "type": "close",
        //             "name": "Tomó algún medicamento?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 4,
        //             "type": "open",
        //             "name": "Nombre de los medicamentos",
        //             "options": null
        //         },
        //         {
        //             "id": 5,
        //             "type": "open",
        //             "name": "Desde cuando?",
        //             "options": null
        //         },
        //         {
        //             "id": 6,
        //             "type": "close",
        //             "name": "Obtuvo resultados?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 7,
        //             "type": "close",
        //             "name": "Ha tenido dolor?",
        //             "options": ["Suave", "Moderado", "Intenso", "Temporario", "Intermitente", "Continuo", "Espontáneo", "Provocado", "Al frío", "Al calor", "Localizado", "Irradiado"]
        //         },
        //         {
        //             "id": 8,
        //             "type": "open",
        //             "name": "dónde?",
        //             "options": null
        //         },
        //         {
        //             "id": 9,
        //             "type": "open",
        //             "name": "hacia dónde?",
        //             "options": null
        //         },
        //         {
        //             "id": 10,
        //             "type": "open",
        //             "name": "Puede calmarlo con algo?",
        //             "options": null
        //         },
        //         {
        //             "id": 11,
        //             "type": "close",
        //             "name": "Sufrió algún golpe en los dientes?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 12,
        //             "type": "open",
        //             "name": "cuándo?",
        //             "options": null
        //         },
        //         {
        //             "id": 13,
        //             "type": "open",
        //             "name": "cómo se produjo?",
        //             "options": null
        //         },
        //         {
        //             "id": 14,
        //             "type": "close",
        //             "name": "Se le fracturó algún diente?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 15,
        //             "type": "open",
        //             "name": "cuál?",
        //             "options": null
        //         },
        //         {
        //             "id": 16,
        //             "type": "close",
        //             "name": "recibió algún tratamiento?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 17,
        //             "type": "open",
        //             "name": "cuál?",
        //             "options": null
        //         },
        //         {
        //             "id": 18,
        //             "type": "close",
        //             "name": "Tiene dificultad para hablar?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 19,
        //             "type": "close",
        //             "name": "para masticar?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 20,
        //             "type": "close",
        //             "name": "para abrir la boca?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 21,
        //             "type": "close",
        //             "name": "para tragar los alimentos?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 22,
        //             "type": "close",
        //             "name": "Ha observado algo anormal en los labios?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 23,
        //             "type": "close",
        //             "name": "lengua?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 24,
        //             "type": "close",
        //             "name": "paladar?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 25,
        //             "type": "close",
        //             "name": "piso de boca?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 26,
        //             "type": "close",
        //             "name": "carrillos?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 27,
        //             "type": "close",
        //             "name": "rebordes?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 28,
        //             "type": "close",
        //             "name": "trígono",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 29,
        //             "type": "close",
        //             "name": "retromolar",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 30,
        //             "type": "close",
        //             "name": "Qué tipo de lesiones presenta: Manchas?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 31,
        //             "type": "close",
        //             "name": "Abultamiento de los tejidos?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 32,
        //             "type": "close",
        //             "name": "Ulceraciones?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 33,
        //             "type": "close",
        //             "name": "Ampollas?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 34,
        //             "type": "open",
        //             "name": "Otros",
        //             "options": null
        //         },
        //         {
        //             "id": 35,
        //             "type": "close",
        //             "name": "Le sangran las encías?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 36,
        //             "type": "open",
        //             "name": "cuándo?",
        //             "options": null
        //         },
        //         {
        //             "id": 37,
        //             "type": "close",
        //             "name": "Sale pus de algún lugar de su boca?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 38,
        //             "type": "open",
        //             "name": "de dónde?",
        //             "options": null
        //         },
        //         {
        //             "id": 39,
        //             "type": "close",
        //             "name": "Tiene movilidad en sus dientes?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 40,
        //             "type": "close",
        //             "name": "al morder siente altos los dientes?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 41,
        //             "type": "close",
        //             "name": "Ha tenido la cara hinchada?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 42,
        //             "type": "close",
        //             "name": "Se puso hielo?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 43,
        //             "type": "close",
        //             "name": "calor?",
        //             "options": ["Sí", "No"]
        //         },
        //         {
        //             "id": 44,
        //             "type": "open",
        //             "name": "otros?",
        //             "options": null
        //         },
        //         {
        //             "id": 45,
        //             "type": "open",
        //             "name": "Momentos de azúcar diario",
        //             "options": null
        //         },
        //         {
        //             "id": 46,
        //             "type": "open",
        //             "name": "Indice de placa",
        //             "options": null
        //         },
        //         {
        //             "id": 47,
        //             "type": "open",
        //             "name": "Estado de la higiene bucal",
        //             "options": null
        //         }
        //     ];
        // Envío la petición con la estructura final
        $("#save-all-questions").click(() => {
            let uID = sessionStorage.getItem('userID');
            $.ajax({
                //url: sessionStorage.urlEP + `/api/Generics/v1/StoreUsersClinicStoryFormat?uIDPetition=${uIDPetition}&oID=1&jsonObject=` + JSON.stringify(finalStructure),
                url: sessionStorage.urlEP + '/api/Generics/v1/StoreUsersClinicStoryFormat?oID=1&uIDPetition=' + uID,
                type: 'POST',
                contentType: "application/json",
                dataType: 'json',
                data: JSON.stringify(finalStructure),
                success: function (response) {
                    if (response.codeStatus == 0) {
                        Swal.fire({
                            title: 'Preguntas Guardadas',
                            icon: 'success',
                            confirmButtonText: 'Aceptar',
                            confirmButtonColor: '#008dc9'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                swal.close();
                                location.reload();
                            }
                        })
                    }
                    else if (response.codeStatus == -1) {
                        Swal.fire({
                            title: 'Error',
                            text: response.messageStatus,
                            icon: 'info',
                            confirmButtonText: 'Aceptar',
                            confirmButtonColor: '#008dc9'
                        })
                    }
                },
                error: function (error) {
                    console.log(error);
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    location.reload();
                }
            })
        });



    </script>
    <script>
        function logDataScript() {
            // Mueve los scripts que necesitan ejecutarse después de cargar la vista parcial aquí

            //Script para el Log de Datos
            let longitudRespuesta = 0;
            function getServiceRecords(currentPage) {
                $.ajax({
                    url: sessionStorage.urlEP + '/api/Generics/v1/Getlogs?pageNumber=' + currentPage,
                    type: 'GET',
                    contentType: "application/json",
                    dataType: 'json',
                    async: false,
                    success: function (response) {
                        let rolesMapping = {
                            1: 'Administrador',
                            2: 'Doctores',
                            3: 'Pacientes'
                        };
                        if (response.codeStatus == 0) {
                            let serviceRecord = [];
                            console.log(response.itemJson);
                            longitudRespuesta = response.itemJson.length;
                            //Mapear estos datos en el array serviceRecords
                            $.each(response.itemJson, function (index, usuario) {
                                let rol = rolesMapping[usuario.utID];
                                let rowData = [
                                    index + 1,
                                    usuario.uID,
                                    rol,
                                    usuario.uLoginName,
                                    usuario.logAction,
                                    usuario.logDescription,
                                    usuario.logCreationDate
                                ];
                                serviceRecord.push(rowData);
                            });
                            drawTable(serviceRecord);
                        } else if (response.codeStatus == -1) {
                            Swal.fire({
                                title: 'Error',
                                text: response.messageStatus,
                                icon: 'error',
                                confirmButtonText: 'Aceptar',
                                confirmButtonColor: '#008dc9'
                            })
                        }
                    },
                    error: function (error) {
                        //console.log(error);
                    }
                });
            }

            function drawTable(arrayData) {
                tableLogsServices = $('#logsServicios').DataTable({
                    columns: [
                        { title: '#', visible: false },
                        { title: 'ID Usuario', visible: false },
                        { title: 'Rol' },
                        { title: 'Nombre' },
                        { title: 'Acción' },
                        { title: 'Descripción' },
                        { title: 'Fecha' }
                    ],
                    data: arrayData,
                    select: true,
                    destroy: true,
                    searching: false, // ocultar la búsqueda
                    paging: false, // ocultar la paginación
                    info: false,
                    language: {
                        url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json',
                    },
                });
                // currentPage = tableLogsServices.page.info().page + 1;
                // console.log("currentPage: ", currentPage);
            }


            $(document).ready(() => {
                let currentPage = 1;
                if (currentPage == 1) { document.getElementById("logPrev").disabled = true; }

                getServiceRecords(currentPage);
                document.getElementById("logPrev").addEventListener("click", () => {
                    currentPage--;
                    if (currentPage < 1) { currentPage = 1; document.getElementById("logPrev").disabled = true; document.getElementById("logNext").disabled = false; }
                    //console.log("currentPage:", currentPage);
                    getServiceRecords(currentPage);
                    document.getElementById("logsServicios").classList.add("fade-in");
                });

                document.getElementById("logNext").addEventListener("click", () => {
                    currentPage++;
                    getServiceRecords(currentPage);
                    //console.log("Longitud Respuesta: ", longitudRespuesta);
                    if (longitudRespuesta < 10) {
                        document.getElementById("logNext").disabled = true;
                    } else {
                        document.getElementById("logNext").disabled = false;
                        document.getElementById("logPrev").disabled = false;
                    }
                    document.getElementById("logsServicios").classList.add("fade-in");
                });
            });
        }
    </script>

    <script src="~/assets/js/bootstrap.min.js"></script>
    <script src="~/assets/js/theme.js"></script>
}

