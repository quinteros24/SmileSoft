@using System.Collections.Specialized
@using WebSmileSoft.Models;
@* @model WebSmileSoft.Models.UsuariosModel[] *@
@model List<UsuariosModel>

@{
    ViewData["Title"] = "Tabla";
}

@{

    <nav aria-label="breadcrumb" class="main-breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Inicio</a></li>
                    <li class="breadcrumb-item">Administracion de Usuarios</li>
                    <li class="breadcrumb-item active" aria-current="page">
                        CRUD Usuarios
                    </li>
                </ol>
    </nav>
    <div class="mt-2 text-end my-2">
                <button onclick="mostrarCarga(); verusers(1);" class="btn btn-success">Administradores</button>
                <button onclick="mostrarCarga(); verusers(2);" class="btn btn-info">Doctores</button>
                <button onclick="mostrarCarga(); verusers(3);" class="btn btn-dark">Pacientes</button>

                <a class="btn btn-success add-user-btn " data-toggle="modal" data-target="#addUserModal"><i class="fas fa-user-plus"> </i> Agregar Usuario</a>

    </div>

    <div class="card-body">
                @*<div class="row">
    <div class="col-md-6 text-nowrap">
    <div id="dataTable_length"
    class="dataTables_length"
    aria-controls="dataTable">
    <label class="form-label">
    Mostrar
    <select class="d-inline-block form-select form-select-sm">
    <option value="5" selected="">5</option>
    <option value="10">10</option>
    <option value="15">15</option>
    <option value="50">50</option>
    </select>&nbsp;
    </label>
    </div>
    </div>
    <div class="col-md-6">
    <div class="text-md-end dataTables_filter"
    id="dataTable_filter">
    <label class="form-label">
    <input type="search"
    class="form-control form-control-sm"
    aria-controls="dataTable"
    placeholder="Buscar" />
    </label>
    </div>
    </div>
    </div>
    *@
                <div class="table-responsive">
                    @*<table class="table my-0 display table-hover " id="userTable"
        data-toggle="table"
        data-height="460"
        data-pagination="true"
        data-search="true">
                    <table id="html5-extension" class="table table-hover non-hover">
                        <!-- Encabezados de columna -->
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Rol</th>
                                <th>Nombre</th>
                                <th>Apellido</th>
                                <th>Documento</th>
                                <th>Ultimo Ingreso</th>
                                <th>Estado</th>
                                <!-- Agrega aquí más encabezados según sea necesario -->
                                <th class="dt-no-sorting">Acciones</th>
                            </tr>
                        </thead>

                        <tbody id="dataTable">

                            <!-- Los usuarios se cargarán aquí a través de AJAX -->
                        </tbody>
                        <tfoot>
                            <tr>
                                <td><strong>ID</strong></td>
                                <td><strong>Rol</strong></td>
                                <td><strong>Nombre</strong></td>
                                <td><strong>Apellido</strong></td>
                                <td><strong>Documento</strong></td>
                                <td><strong>Ultimo Ingreso</strong></td>
                                <td><strong>Estado</strong></td>
                                <td><strong>Acciones</strong></td>
                            </tr>

                        </tfoot>
                    </table>
                </div>
                @*<div class="row">
    <div class="col-md-6 align-self-center">
    <p id="dataTable_info"
    class="dataTables_info"
    role="status"
    aria-live="polite">
    Mostrando 1 de 10 de 27
    </p>
    </div>
    <div class="col-md-6">
    <nav class="d-lg-flex justify-content-lg-end dataTables_paginate paging_simple_numbers">
    <ul class="pagination">
    <li class="page-item disabled">
    <a class="page-link" aria-label="Previous" href="#"><span aria-hidden="true">«</span></a>
    </li>
    <li class="page-item active">
    <a class="page-link" href="#">1</a>
    </li>
    <li class="page-item">
    <a class="page-link" href="#">2</a>
    </li>
    <li class="page-item">
    <a class="page-link" href="#">3</a>
    </li>
    <li class="page-item">
    <a class="page-link" aria-label="Next" href="#"><span aria-hidden="true">»</span></a>
    </li>
    </ul>
    </nav>
    </div>
    </div>*@
        <table id="example" class="table table-hover non-hover" width="100%"></table>
    </div>
    </div>

    <!-- Modal de Edición -->
    <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editModalLabel">Editar Usuario</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Aquí coloca los campos de edición, por ejemplo: -->
                            <form>
                                <div class="mb-3">
                                    <label for="editNombre" class="form-label">Nombre:</label>
                                    <input type="text" class="form-control" id="editNombre" name="editNombre">
                                </div>
                                <div class="mb-3">
                                    <label for="editRol" class="form-label">Rol:</label>
                                    <input type="text" class="form-control" id="editRol" name="editRol">
                                </div>
                                <!-- Agrega más campos de edición aquí según sea necesario -->
                            </form>
                        </div>
                        <div class="modal-footer">

                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                            <button type="button" class="btn btn-primary" id="saveChanges">Guardar Cambios</button>
                        </div>
                    </div>
                </div>
    </div>


    <!-- Modal de Inactivación -->
    <div class="modal fade" id="deactivateModal" tabindex="-1" role="dialog" aria-labelledby="deactivateModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="deactivateModalLabel">Inactivar Usuario</h5>
                            <button type="button" class="close" data-bs-dismiss="modal" aria-label="Cerrar">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <p>¿Estás seguro de que deseas inactivar este usuario?</p>
                            <p><strong>Nombre:</strong> <span id="deactivate-username"></span></p>
                            <p><strong>Rol:</strong> <span id="deactivate-userrole"></span></p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                            <button type="button" class="btn btn-warning" id="confirm-deactivate">Inactivar</button>
                        </div>
                    </div>
                </div>
    </div>

    @*
    <div class="form-group">
        <label for="universidad">Universidad:</label>
        <input type="text" class="form-control" id="universidad" name="universidad">
    </div>
    *@
    <div class="modal fade" id="addUserModal" tabindex="-1" role="dialog" aria-labelledby="addUserModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <!-- Modal más grande (modal-lg) -->
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="addUserModalLabel">Agregar Usuario</h5>
                        </div>
                        <div class="modal-body">
                            <form id="add-user-form">
                                <!-- Campos del formulario -->
                                <div class="row">
                                    <div class="form-group">
                                        <label for="tipoUsuario">* Tipo de Usuario:</label>
                                        <select class="form-control" id="tipoUsuario" name="tipoUsuario" required>
                                            <option value="2">Odontólogo</option>
                                            <option value="3">Paciente</option>
                                            <option value="1">Administrador</option>
                                        </select>
                                    </div>
                                    <div class="col-md-6">
                                        <!-- Primera columna -->
                                        <!-- Campos del formulario -->
                                        <!-- Aquí van los campos que deseas en la primera columna -->
                                        <div class="form-group">
                                            <label for="nombres">* Nombres:</label>
                                            <input type="text" class="form-control" id="nombres" name="nombres" required>
                                        </div>
                                        <div class="form-group">
                                            <label for="celular">Número de Celular:</label>
                                            <input type="text" class="form-control" id="celular" name="celular" required>
                                        </div>
                                        <div class="form-group">
                                            <label for="tipoDocumento">* Tipo de Documento:</label>
                                            <select class="form-control" id="tipoDocumento" name="tipoDocumento" required>
                                                <option value="cc">Cedula de Ciudadania (CC)</option>
                                                <option value="ce">Cedula de Extranjeria (CE)</option>
                                                <option value="ti">Tarjeta de Identidad (TI)</option>
                                            </select>
                                        </div>

                                        <div class="form-group">
                                            <label for="usuario">* Usuario:</label>
                                            <input type="text" class="form-control" id="usuario" name="usuario" required>
                                        </div>

                                        <div class="form-group">
                                            <label for="fechaNacimiento">Fecha de Nacimiento:</label>
                                            <input type="date" class="form-control" id="fechaNacimiento" name="fechaNacimiento" required>
                                        </div>

                                        @*<div class="form-group">
                            <label for="especialidad">Especialidad:</label>
                            <input type="text" class="form-control" id="especialidad" name="especialidad">
                            </div>*@
                                        <!-- Agrega más campos aquí -->

                                    </div>
                                    <div class="col-md-6">
                                        <!-- Segunda columna -->
                                        <!-- Campos del formulario -->
                                        <!-- Aquí van los campos que deseas en la segunda columna -->
                                        <div class="form-group">
                                            <label for="apellidos">* Apellidos:</label>
                                            <input type="text" class="form-control" id="apellidos" name="apellidos" required>
                                        </div>
                                        <div class="form-group">
                                            <label for="correo">* Correo Electrónico:</label>
                                            <input type="email" class="form-control" id="correo" name="correo" required>
                                        </div>
                                        <div class="form-group">
                                            <label for="numeroDocumento">* Número de Documento:</label>
                                            <input type="text" class="form-control" id="numeroDocumento" name="numeroDocumento" required>
                                        </div>
                                        <div class="form-group">
                                            <label for="password">* Contraseña:</label>
                                            <input type="password" class="form-control" id="password" name="password" required>
                                        </div>
                                        @*<div class="form-group">
                            <label for="genero">Género:</label>
                            <div class="form-check">
                            <input class="form-check-input" type="radio" name="genero" id="masculino" value="Masculino" required>
                            <label class="form-check-label" for="masculino">Masculino</label>
                            </div>
                            <div class="form-check">
                            <input class="form-check-input" type="radio" name="genero" id="femenino" value="Femenino" required>
                            <label class="form-check-label" for="femenino">Femenino</label>
                            </div>
                            </div>*@
                                        <div class="form-group">
                                            <label for="direccion">Dirección:</label>
                                            <input type="text" class="form-control" id="direccion" name="direccion" required>
                                        </div>



                                        <!-- Agrega más campos aquí -->

                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                            <button type="button" class="btn btn-primary" id="add-user">Agregar</button>
                        </div>
                    </div>
                </div>
    </div>

}

@section Scripts {


    <script>

        // "uID": 0,
        //     "utID": 0,
        //         "uName": "string",
        //             "uLastName": "string",
        //                 "uCellphone": "string",
        //                     "uAddress": "string",
        //                         "uLoginName": "string",
        //                             "uEmailAddress": "string",
        //                                 "dtID": 0,
        //                                     "uDocument": "string",
        //                                         "uStatus": 0,
        //                                             "uIsBlocked": 0,
        //                                                 "uPassword": "string"
        //Visualizar Datos en Tabla Funciona OK -- Falta Agregar Botones
        // $(document).ready(function () {
        //     verusers(3);
        // });
        // function verusers(utID) {
        //     // Realizar solicitud AJAX para obtener la lista de usuarios
        //     // var utID = 1;

        //     $.ajax({
        //         url: '@ViewBag.urlEndPoint' + '/api/Users/v1/ViewUsers',
        //         type: 'GET',
        //         data: { 'utID': utID },
        //         contentType: "application/json",
        //         dataType: 'json',
        //         success: function (data) {
        //             console.log("Respuesta del Servidor " + data);
        //             // Procesar los datos recibidos y agregar filas a la tabla
        //             var tbody = $('#dataTable');
        //             tbody.empty(); // Limpia cualquier contenido existente en la tabla

        //             $.each(data.itemJson, function (index, usuario) {
        //                 // Agregar una fila a la tabla para cada usuario

        //                 var row = '<tr>' +
        //                     '<td>' + usuario.uID + '</td>' +
        //                     '<td>' + usuario.utID + '</td>' +
        //                     '<td>' + usuario.uName + '</td>' +
        //                     '<td>' + usuario.uLastName + '</td>' +
        //                     '<td>' + usuario.uDocument + '</td>' +
        //                     '<td>' + usuario.uIsBlocked + '</td>' +
        //                     '<td>' + usuario.uStatus + '</td>' +

        //                     // Agrega más columnas según los datos del usuario
        //                     '<td>' +
        //                     '<a class="btn btn-primary btn-sm edit-user" data-toggle="modal" data-target="#deactivateModal" data-id="' + usuario.uID + '">Editar</a>' +
        //                     '<a class="btn btn-warning btn-sm deactivate-user" data-toggle="modal" data-target="#deactivateModal" data-id="' + usuario.uID + '"><i class="fas fa-ban"></i></a>'
        //                 // Agrega enlaces o botones similares para eliminar e inactivar usuarios
        //                 '</td>' +
        //                     '</tr>';

        //                 tbody.append(row);
        //             });
        //         },
        //         error: function (error) {
        //             console.log('Error al obtener la lista de usuarios.');
        //         }
        //     });
        // };
        $(document).ready(function () {
            verusers(3);
        });
        function verusers(utID) {
            // Realizar solicitud AJAX para obtener la lista de usuarios
            // var utID = 1;

            $.ajax({
                url: '@ViewBag.urlEndPoint' + '/api/Users/v1/ViewUsers',
                type: 'GET',
                data: { 'utID': utID },
                contentType: "application/json",
                dataType: 'json',
                success: function (data) {
                    console.log("Respuesta del Servidor " + data);
                    // Procesar los datos recibidos y agregar filas a la tabla
                    var dataSet = [];
                    let users = data.itemJson;
                    console.table(users);
                    $.each(data.itemJson, function (index, usuario) {
                        var rowData = [
                            usuario.uID,
                            usuario.utID,
                            usuario.uName,
                            usuario.uLastName,
                            usuario.uDocument,
                            usuario.uIsBlocked,
                            usuario.uStatus
                        ];
                        dataSet.push(rowData);
                    });

                    // Inicializa o actualiza el DataTable con los datos procesados
                    table = $('#example').DataTable({
                    // new DataTable('#example', {
                        columns: [
                            { title: 'ID' },
                            { title: 'Rol' },
                            { title: 'Nombree' },
                            { title: 'Apellidos.' },
                            { title: 'Documento' },
                            { title: 'Bloqueado' },
                            { title: 'Estado' }
                        ],
                        data: dataSet,
                        "dom": "<'dt--top-section'<'row'<'col-sm-12 col-md-6 d-flex justify-content-md-start justify-content-center'B><'col-sm-12 col-md-6 d-flex justify-content-md-end justify-content-center mt-md-0 mt-3'f>>>" +
                            "<'table-responsive'tr>" +
                            "<'dt--bottom-section d-sm-flex justify-content-sm-between text-center'<'dt--pages-count  mb-sm-0 mb-3'i><'dt--pagination'p>>",
                        buttons: {
                            buttons: [
                                { extend: 'copy', className: 'btn btn-sm' },
                                { extend: 'csv', className: 'btn btn-sm' },
                                { extend: 'excel', className: 'btn btn-sm' },
                                { extend: 'print', className: 'btn btn-sm' }
                            ]
                        },
                        destroy: true
                        
                    });
                    
                }
            });
        };


            // Controlador de clic para el botón "Editar"
            $(".edit-user").click(function () {
                // Obtiene el valor de data-id
                var userId = $(this).data("id");
                console.log(userId);

                // Realiza una solicitud AJAX para obtener los datos del usuario desde el servidor
                $.ajax({
                    url: "'https://ep-smilesoft-develop.azurewebsites.net' + '/api/Users/v1/CreateUpdateUsers'" + userId, // Reemplaza con la URL correcta para obtener los datos del usuario
                    type: "POST",
                    success: function (userData) {
                        // Llena los campos del formulario de edición con los datos del usuario
                        $("#nombres").val(userData.nombres);
                        $("#apellidos").val(userData.apellidos);
                        $("#celular").val(userData.celular);
                        $("#correo").val(userData.correo);
                        $("#direccion").val(userData.direccion);
                        $("#tipoDocumento").val(userData.tipoDocumento);
                        $("#usuario").val(userData.usuario);
                        $("input[name='genero'][value='" + userData.genero + "']").prop("checked", true);
                        $("#fechaNacimiento").val(userData.fechaNacimiento);

                        // Abre el modal de edición
                        $("#editModal").modal("show");
                    },
                    error: function () {
                        //alert("Error al obtener los datos del usuario");
                        Swal.fire({
                            title: 'Error',
                            text: 'Error al obtener los datos del usuario',
                            icon: 'error',
                            confirmButtonText: 'Aceptar'
                        });
                    }
                });
            });
            $(".deactivate-user").click(function () {
                // Obtén los detalles del usuario desde los atributos de datos
                var userId = $(this).data("id");
                var username = $(this).data("username");
                var userrole = $(this).data("userrole");

                // Llena los campos del modal de inactivación
                $("#deactivate-username").text(username);
                $("#deactivate-userrole").text(userrole);

                // Abre el modal de inactivación
                $("#deactivateModal").modal("show");
            });

            // Controlador de clic para el botón "Confirmar Inactivación"
            $("#confirm-deactivate").click(function () {
                var userId = $(this).data("id");
                $.ajax({
                    url: 'https://ep-smilesoft-develop.azurewebsites.net' + '/api/Users/v1/CreateUpdateUsers' + userId, // Reemplaza la URL con la correcta
                    type: 'POST', // O el método HTTP correcto para tu aplicación
                    success: function (data) {
                        // Cierra el modal de deshabilitación
                        $("#deactivateModal").modal("hide");
                    },
                    error: function () {
                        //alert("Error al deshabilitar el usuario");
                        Swal.fire({
                            title: 'Error',
                            text: 'Error al deshabilitar el usuario',
                            icon: 'error',
                            confirmButtonText: 'Aceptar'
                        });
                    }
                });
            });

            $(".add-user-btn").click(function () {
                // Abre el modal de agregar usuario
                $("#addUserModal").modal("show");


            });




            // Función para permitir solo números en un campo de entrada
            function allowNumbersOnly(inputField) {
                inputField.value = inputField.value.replace(/[^0-9]/g, '');
            }

            // Aplica la función a los campos de celular y número de documento
            $("#celular").on("input", function () {
                allowNumbersOnly(this);
            });

            $("#numeroDocumento").on("input", function () {
                allowNumbersOnly(this);
            });

            // Controlador de clic para el botón "Agregar"
            $("#add-user").click(function () {
                // Obtiene los datos del formulario

                var userData = {
                    utID: $("#tipoUsuario").val(),
                    uName: $("#nombres").val(),
                    uLastName: $("#apellidos").val(),
                    uCellphone: $("#celular").val(),
                    uEmailAddress: $("#correo").val(),
                    uAddress: $("#direccion").val(),
                    uLoginName: $("#usuario").val(),
                    uPassword: $("#password").val(),
                    dtID: 1,
                    uDocument: $("#numeroDocumento").val()
                    //genero: $("input[name='genero']:checked").val(), // Obtiene el valor del radio button seleccionado
                    //fechaNacimiento: $("#fechaNacimiento").val(),

                };
                console.log("Datos del Usuario " + userData);
                //Validar campos obligatorios
        @*
                if (!userData.nombres || !userData.apellidos || !userData.tipoDocumento || !userData.numeroDocumento || !userData.usuario || !userData.password || !userData.tipoUsuario) {
                //alert("Por favor, complete todos los campos obligatorios.");
                Swal.fire({
                title: 'Error',
                text: 'Por favor, complete todos los campos obligatorios.',
                icon: 'error',
                confirmButtonText: 'Aceptar'
                });
                return;
                }*@

                                                                //!userData.correo ||

                                                                // Validación de la contraseña
                                    var password = userData.uPassword;
                var passwordError = "";

                if (password.length < 8) {
                    passwordError = "La contraseña debe tener al menos 8 caracteres.";
                } else if (!/[A-Z]/.test(password)) {
                    passwordError = "La contraseña debe contener al menos una letra mayúscula.";
                } else if (!/[a-z]/.test(password)) {
                    passwordError = "La contraseña debe contener al menos una letra minúscula.";
                } else if (!/\d/.test(password)) {
                    passwordError = "La contraseña debe contener al menos un número.";
                }

                // Muestra el mensaje de error si es necesario
                if (passwordError) {
                    //alert(passwordError);
                    Swal.fire({
                        title: 'Error',
                        text: passwordError,
                        icon: 'error',
                        confirmButtonText: 'Aceptar'
                    });
                    return; // Detiene la ejecución si la contraseña no cumple con los requisitos
                }

                // Realiza una solicitud AJAX para agregar el usuario en el servidor
                $.ajax({
                    type: "POST",
                    url: 'https://ep-smilesoft-develop.azurewebsites.net' + '/api/Users/v1/CreateUpdateUsers', // Ruta para agregar el usuario
                    data: JSON.stringify(userData), // Convierte userData a JSON
                    contentType: "application/json", // Especifica el tipo de contenido

                    dataType: "json",
                    success: function (result) {
                        // Actualiza la vista o realiza alguna otra acción
                        $("#addUserModal").modal("hide");
                        //alert("Usuario agregado correctamente");
                        // Cierra el modal de agregar usuario
                        Swal.fire({
                            title: 'Usuario Agregado',
                            text: 'El usuario se agregó correctamente',
                            icon: 'success',
                            confirmButtonText: 'Aceptar'
                        });
                    },
                    error: function () {
                        //alert("Error al agregar el usuario");
                        Swal.fire({
                            title: 'Error',
                            text: 'Error al agregar el usuario',
                            icon: 'error',
                            confirmButtonText: 'Aceptar'
                        });
                    }
                });
            });

            function mostrarCarga() {
                Swal.fire({
                    title: 'Cargando',
                    html: 'Por favor, espere un momento',
                    timer: 1000,  // Tiempo en milisegundos (3 segundos)
                    timerProgressBar: true,
                    didOpen: () => {
                        Swal.showLoading();
                    },
                    willClose: () => {
                        // Aquí puedes realizar acciones adicionales después de que se cierre la ventana de carga, si es necesario.
                        console.log('La ventana de carga se cerró después de 1 segundo');
                    }
                });
            }


    </script>
    <script>
        console.log("Cargando DataTable");
        $('#Table').DataTable({
            "dom": "<'dt--top-section'<'row'<'col-sm-12 col-md-6 d-flex justify-content-md-start justify-content-center'B><'col-sm-12 col-md-6 d-flex justify-content-md-end justify-content-center mt-md-0 mt-3'f>>>" +
                "<'table-responsive'tr>" +
                "<'dt--bottom-section d-sm-flex justify-content-sm-between text-center'<'dt--pages-count  mb-sm-0 mb-3'i><'dt--pagination'p>>",
            buttons: {
                buttons: [
                    { extend: 'copy', className: 'btn btn-sm' },
                    { extend: 'csv', className: 'btn btn-sm' },
                    { extend: 'excel', className: 'btn btn-sm' },
                    { extend: 'print', className: 'btn btn-sm' }
                ]
            },
            "oLanguage": {
                "oPaginate": { "sPrevious": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-left"><line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline></svg>', "sNext": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-right"><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg>' },
                "sInfo": "Mostrando la pagina _PAGE_ of _PAGES_",
                "sSearch": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-search"><circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line></svg>',
                "sSearchPlaceholder": "Buscar...",
                "sLengthMenu": "Results :  _MENU_",
            },
            "stripeClasses": [],
            "lengthMenu": [5, 10, 20, 50],
            "pageLength": 5
        });
    </script>

    //     <script>
               //         const dataSet = [
               //             ['Tiger Nixon', 'System Architect', 'Edinburgh', '5421', '2011/04/25', '$320,800'],
               //             ['Garrett Winters', 'Accountant', 'Tokyo', '8422', '2011/07/25', '$170,750'],
               //             ['Ashton Cox', 'Junior Technical Author', 'San Francisco', '1562', '2009/01/12', '$86,000'],
               //             ['Cedric Kelly', 'Senior Javascript Developer', 'Edinburgh', '6224', '2012/03/29', '$433,060'],
               //             ['Airi Satou', 'Accountant', 'Tokyo', '5407', '2008/11/28', '$162,700'],
               //             ['Brielle Williamson', 'Integration Specialist', 'New York', '4804', '2012/12/02', '$372,000'],
               //             ['Herrod Chandler', 'Sales Assistant', 'San Francisco', '9608', '2012/08/06', '$137,500'],
               //             ['Rhona Davidson', 'Integration Specialist', 'Tokyo', '6200', '2010/10/14', '$327,900'],
               //             ['Colleen Hurst', 'Javascript Developer', 'San Francisco', '2360', '2009/09/15', '$205,500'],
               //             ['Sonya Frost', 'Software Engineer', 'Edinburgh', '1667', '2008/12/13', '$103,600'],
               //             ['Jena Gaines', 'Office Manager', 'London', '3814', '2008/12/19', '$90,560'],
               //             ['Quinn Flynn', 'Support Lead', 'Edinburgh', '9497', '2013/03/03', '$342,000'],
               //             ['Charde Marshall', 'Regional Director', 'San Francisco', '6741', '2008/10/16', '$470,600'],
               //             ['Haley Kennedy', 'Senior Marketing Designer', 'London', '3597', '2012/12/18', '$313,500'],
               //             ['Tatyana Fitzpatrick', 'Regional Director', 'London', '1965', '2010/03/17', '$385,750'],
               //             ['Michael Silva', 'Marketing Designer', 'London', '1581', '2012/11/27', '$198,500'],
               //             ['Paul Byrd', 'Chief Financial Officer (CFO)', 'New York', '3059', '2010/06/09', '$725,000'],
               //             ['Gloria Little', 'Systems Administrator', 'New York', '1721', '2009/04/10', '$237,500'],
               //             ['Bradley Greer', 'Software Engineer', 'London', '2558', '2012/10/13', '$132,000'],
               //             ['Dai Rios', 'Personnel Lead', 'Edinburgh', '2290', '2012/09/26', '$217,500'],
               //             ['Jenette Caldwell', 'Development Lead', 'New York', '1937', '2011/09/03', '$345,000'],
               //             ['Yuri Berry', 'Chief Marketing Officer (CMO)', 'New York', '6154', '2009/06/25', '$675,000'],
               //             ['Caesar Vance', 'Pre-Sales Support', 'New York', '8330', '2011/12/12', '$106,450'],
               //             ['Doris Wilder', 'Sales Assistant', 'Sydney', '3023', '2010/09/20', '$85,600'],
               //             ['Angelica Ramos', 'Chief Executive Officer (CEO)', 'London', '5797', '2009/10/09', '$1,200,000'],
               //             ['Gavin Joyce', 'Developer', 'Edinburgh', '8822', '2010/12/22', '$92,575'],
               //             ['Jennifer Chang', 'Regional Director', 'Singapore', '9239', '2010/11/14', '$357,650'],
               //             ['Brenden Wagner', 'Software Engineer', 'San Francisco', '1314', '2011/06/07', '$206,850'],
               //             ['Fiona Green', 'Chief Operating Officer (COO)', 'San Francisco', '2947', '2010/03/11', '$850,000'],
               //             ['Shou Itou', 'Regional Marketing', 'Tokyo', '8899', '2011/08/14', '$163,000'],
               //             ['Michelle House', 'Integration Specialist', 'Sydney', '2769', '2011/06/02', '$95,400'],
               //             ['Suki Burks', 'Developer', 'London', '6832', '2009/10/22', '$114,500'],
               //             ['Prescott Bartlett', 'Technical Author', 'London', '3606', '2011/05/07', '$145,000'],
               //             ['Gavin Cortez', 'Team Leader', 'San Francisco', '2860', '2008/10/26', '$235,500'],
               //             ['Martena Mccray', 'Post-Sales support', 'Edinburgh', '8240', '2011/03/09', '$324,050'],
               //             ['Unity Butler', 'Marketing Designer', 'San Francisco', '5384', '2009/12/09', '$85,675'],
               //         ];

               //         new DataTable('#example', {
               //             columns: [
               //                 { title: 'Name' },
               //                 { title: 'Position' },
               //                 { title: 'Office' },
               //                 { title: 'Extn.' },
               //                 { title: 'Start date' },
               //                 { title: 'Salary' }
               //             ],
               //             data: dataSet
               //         });
               // </script>
        }
