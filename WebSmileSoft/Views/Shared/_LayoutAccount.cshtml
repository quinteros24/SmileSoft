<!DOCTYPE html>
<html lang="es">
<!-- data-bs-theme="dark" -->
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - WebSmileSoft</title>

    <!-- Selector de Tema -->
    <script>
        (function () {

            // JavaScript snippet handling Dark/Light mode switching

            const getStoredTheme = () => localStorage.getItem('theme');
            const setStoredTheme = theme => localStorage.setItem('theme', theme);
            const forcedTheme = document.documentElement.getAttribute('data-bss-forced-theme');

            const getPreferredTheme = () => {

                if (forcedTheme) return forcedTheme;

                const storedTheme = getStoredTheme();
                if (storedTheme) {
                    return storedTheme;
                }

                const pageTheme = document.documentElement.getAttribute('data-bs-theme');

                if (pageTheme) {
                    return pageTheme;
                }

                return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
            }

            const setTheme = theme => {
                if (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {
                    document.documentElement.setAttribute('data-bs-theme', 'dark');
                } else {
                    document.documentElement.setAttribute('data-bs-theme', theme);
                }
            }

            setTheme(getPreferredTheme());

            const showActiveTheme = (theme, focus = false) => {
                const themeSwitchers = [].slice.call(document.querySelectorAll('.theme-switcher'));

                if (!themeSwitchers.length) return;

                document.querySelectorAll('[data-bs-theme-value]').forEach(element => {
                    element.classList.remove('active');
                    element.setAttribute('aria-pressed', 'false');
                });

                for (const themeSwitcher of themeSwitchers) {

                    const btnToActivate = themeSwitcher.querySelector('[data-bs-theme-value="' + theme + '"]');

                    if (btnToActivate) {
                        btnToActivate.classList.add('active');
                        btnToActivate.setAttribute('aria-pressed', 'true');
                    }
                }
            }

            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
                const storedTheme = getStoredTheme();
                if (storedTheme !== 'light' && storedTheme !== 'dark') {
                    setTheme(getPreferredTheme());
                }
            });

            window.addEventListener('DOMContentLoaded', () => {
                showActiveTheme(getPreferredTheme());

                document.querySelectorAll('[data-bs-theme-value]')
                    .forEach(toggle => {
                        toggle.addEventListener('click', (e) => {
                            e.preventDefault();
                            const theme = toggle.getAttribute('data-bs-theme-value');
                            setStoredTheme(theme);
                            setTheme(theme);
                            showActiveTheme(theme);
                        })
                    })
            });
        })();
    </script>
    <!-- Fin Selector de Tema -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Tu código aquí

            var rememberMeCheckbox = document.getElementById("remember_me");

            // Verifica si el usuario ya había seleccionado "Recordar usuario" anteriormente
            if (localStorage.getItem("rememberUser") === "true") {
                rememberMeCheckbox.checked = true;
            }

            // Agrega un controlador de eventos para guardar el estado del checkbox cuando cambie
            rememberMeCheckbox.addEventListener("change", function () {
                if (rememberMeCheckbox.checked) {
                    // Si el usuario selecciona "Recordar usuario", guarda la elección en el almacenamiento local
                    localStorage.setItem("rememberUser", "true");
                } else {
                    // Si el usuario desmarca "Recordar usuario", elimina la elección del almacenamiento local
                    localStorage.removeItem("rememberUser");
                }
            });
        });
    </script>

    <!-- END GLOBAL MANDATORY SCRIPTS -->
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="~/assets/bootstrap/css/bootstrap.min.css" asp-append-version="true">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.12.0/css/all.css" asp-append-version="true">
    <!-- Custom fonts for this template -->
    <link rel="stylesheet" href="~/assets/css/Nunito.css" asp-append-version="true">
    <link href="~/assets/css/sweetdark.css" rel="stylesheet" asp-append-version="true" />
    <!-- Custom styles for this template -->
    @* <link rel="stylesheet" href="~/assets/css/site.css" asp-append-version="true" /> *@
    <link rel="stylesheet" href="~/assets/css/Login.css" asp-append-version="true">

    <!-- Custom Icons for this template -->
    <link rel="stylesheet" href="~/assets/css/Footer-Clean-icons.css" asp-append-version="true">
    <link href="~/assets/css/footerstyle.css" rel="stylesheet" />
    <!-- SweetAlert -->
  @*  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/11.0.18/sweetalert2.min.css" asp-append-version="true"> *@

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11" asp-append-version="true"></script>

</head>

<body class="d-flex flex-column min-vh-100">
    <!-- Contenido de las Otras Vistas-->
    <main role="main" class="pb-3">
        @RenderBody()
    </main>
    <!-- Fin Contenido de las Otras Vistas-->
    @* <a class="border rounded d-inline scroll-to-top" href="#page-top" style="display:none"><i class="fas fa-angle-up" style="display:none"></i></a> *@
    <!-- Footer -->
    @*await Component.InvokeAsync("Footer") *@
    <div id="logout-link" data-logout-url="@Url.Action("Login", "Account")"></div>

    <!-- Scripts -->
    <script src="~/assets/js/UserSessionControl.js" asp-append-version="true"></script>

    <script src="~/assets/js/theme.js" asp-append-version="true"></script>
    <!-- Bootstrap core JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" asp-append-version="true"></script>
    <!-- Core theme JS-->
    <script src='https://code.jquery.com/jquery-3.7.0.min.js' asp-append-version="true"></script>


    <!-- Custom scripts for all pages-->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11" asp-append-version="true"></script>
    <!-- Custom scripts for this template-->
    @*  <script src="~/assets/js/login.js"></script> *@
    <script>
        $(document).ready(function () {
            // Mostrar la tarjeta cuando la página se haya cargado completamente
            $(".card").css("visibility", "visible");
        });

    </script>
   @*  @await Html.PartialAsync("_ValidationScriptsPartial") *@
    @await RenderSectionAsync("Scripts", required: false)
    <!-- Fin Scripts -->
</body>
</html>