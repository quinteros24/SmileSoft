
<!DOCTYPE html>
<html lang="es">
<!-- data-bs-theme="dark" -->
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - WebSmileSoft</title>
    <!-- Theme -->
    <script>
        (function () {

            // JavaScript snippet handling Dark/Light mode switching

            const getStoredTheme = () => localStorage.getItem('theme');
            const setStoredTheme = theme => localStorage.setItem('theme', theme);
            const forcedTheme = document.documentElement.getAttribute('data-bss-forced-theme');

            const getPreferredTheme = () => {

                if (forcedTheme) return forcedTheme;

                const storedTheme = getStoredTheme();
                if (storedTheme) {
                    return storedTheme;
                }

                const pageTheme = document.documentElement.getAttribute('data-bs-theme');

                if (pageTheme) {
                    return pageTheme;
                }

                return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
            }

            const setTheme = theme => {
                if (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {
                    document.documentElement.setAttribute('data-bs-theme', 'dark');
                } else {
                    document.documentElement.setAttribute('data-bs-theme', theme);
                }
            }

            setTheme(getPreferredTheme());

            const showActiveTheme = (theme, focus = false) => {
                const themeSwitchers = [].slice.call(document.querySelectorAll('.theme-switcher'));

                if (!themeSwitchers.length) return;

                document.querySelectorAll('[data-bs-theme-value]').forEach(element => {
                    element.classList.remove('active');
                    element.setAttribute('aria-pressed', 'false');
                });

                for (const themeSwitcher of themeSwitchers) {

                    const btnToActivate = themeSwitcher.querySelector('[data-bs-theme-value="' + theme + '"]');

                    if (btnToActivate) {
                        btnToActivate.classList.add('active');
                        btnToActivate.setAttribute('aria-pressed', 'true');
                    }
                }
            }

            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
                const storedTheme = getStoredTheme();
                if (storedTheme !== 'light' && storedTheme !== 'dark') {
                    setTheme(getPreferredTheme());
                }
            });

            window.addEventListener('DOMContentLoaded', () => {
                showActiveTheme(getPreferredTheme());

                document.querySelectorAll('[data-bs-theme-value]')
                    .forEach(toggle => {
                        toggle.addEventListener('click', (e) => {
                            e.preventDefault();
                            const theme = toggle.getAttribute('data-bs-theme-value');
                            setStoredTheme(theme);
                            setTheme(theme);
                            showActiveTheme(theme);
                        })
                    })
            });
        })();
    </script>

    <!-- Bootstrap core CSS -->
    <link rel="stylesheet" href="~/assets/bootstrap/css/bootstrap.min.css" asp-append-version="true">

    <!-- Custom styles for this template -->
    <link rel="stylesheet" href="~/assets/css/Nunito.css" asp-append-version="true">
    <link rel="stylesheet" href="~/assets/css/site.css" asp-append-version="true" />
    @* <link href="~/assets/css/loader.css" rel="stylesheet" /> *@

    <!-- Custom fonts for this template -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" asp-append-version="true" />
    @* <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.12.0/css/all.css" asp-append-version="true"> *@

    <!-- Custom Icons for this template -->
    <link href="~/assets/css/footer-clean-icons.css" rel="stylesheet" />

    <!-- Custom Animations for this template -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css" asp-append-version="true">

    <!-- Custom Scripts -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js" asp-append-version="true"></script>

    <!-- BEGIN PAGE LEVEL CUSTOM STYLES -->
    <link href="https://cdn.datatables.net/v/bs5/jszip-3.10.1/dt-1.13.6/af-2.6.0/b-2.4.2/b-html5-2.4.2/b-print-2.4.2/kt-2.10.0/r-2.5.0/sr-1.3.0/datatables.min.css" rel="stylesheet">

    <!-- END PAGE LEVEL CUSTOM STYLES -->
    <!-- Calendar Script -->
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.9/index.global.min.js'></script>
    <script>

        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth'
            });
            calendar.getOption('locale');
            calendar.render();

        });

    </script>
    <!-- END Calendar Script -->
    <script src="~/assets/js/utilities.js"></script>
    @await Component.InvokeAsync("CommonData") <!-- Aquí "CommonData" se refiere al nombre de tu ViewComponent -->
</head>


<body id="page-top contenido">
    

    @* <div id="loadingOverlay">
    <div id="loadingSpinner"></div>
    </div> *@
    <div id="wrapper">
        <!-- Sidebar -->
        @await Component.InvokeAsync("Sidebar")

        <div class="d-flex flex-column" id="content-wrapper">
            <!-- navBar -->
            @await Component.InvokeAsync("Navbar")

            <div class="container-fluid">
                <main role="main">
                    <!-- Page Content -->
                    @RenderBody()
                </main>
            </div>

            <!-- Footer -->
            @*  @await Component.InvokeAsync("Footer") *@
        </div>
    </div> @* <a class="border rounded d-inline scroll-to-top" href="#page-top" style="display:none"><i class="fas fa-angle-up"></i></a> *@



    <!-- Custom Theme Script -->
    <script src="~/assets/js/theme.js" asp-append-version="true"></script>

    <!-- Bootstrap core JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript -->
    <script src="https://code.jquery.com/jquery-3.7.0.min.js" asp-append-version="true"></script>

    <!-- Custom scripts for all pages -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11" asp-append-version="true"></script>
    <script src="~/assets/js/UserSessionControl.js" asp-append-version="true"></script>
    <script src="~/assets/js/AlertDesarrollo.js" asp-append-version="true"></script>

    <script>
        function checkTokenAndRedirect() {
            // Verifica si existe un token en sessionStorage u otras condiciones de autenticación
            const token = sessionStorage.getItem('accessToken'); // Reemplaza 'token' con el nombre real de tu token en sessionStorage
            //console.log("Validando Token: " + token);
            if (!token) {
                // No se encontró un token, redirige al usuario a la página de inicio de sesión
                window.location.href = '@Url.Action("Login", "Account")'; // Reemplaza con la URL correcta
            }
        }

        // Llama a la función para verificar el token cuando carga la página
        checkTokenAndRedirect();

        // Llama a la función para verificar el token cada minuto
        setInterval(checkTokenAndRedirect, 60000); // 60000 milisegundos = 1 minuto

        // Resto del contenido de tu página aquí
    </script>
    <script>
        function updateNavbarBackground(selectedColor) {
            // Obtén una referencia a la barra de navegación por su ID
            const navbar = document.getElementById("nav_bar");

            // Elimina todas las clases de fondo de la barra de navegación
            navbar.classList.remove("bg-primary", "bg-danger", "bg-success");

            // Agrega la clase de color seleccionada a la barra de navegación
            navbar.classList.add(selectedColor);
        }
    </script>
    <script>
        function CerrarSesion() {
            //console.log("Cerrando Sesión");
            // Borra el Session Storage
            sessionStorage.clear();
            window.location.href = '@Url.Action("Login", "Account")';
        }
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Recupera el nombre y apellido del usuario desde sessionStorage
            var userFName = sessionStorage.getItem('userFName');
            var userLName = sessionStorage.getItem('userLName');

            // Verifica si las variables tienen valores y si los elementos HTML existen
            var spanNombre = document.getElementById('nombreUsuario');
            var spanSaludo = document.getElementById('SaludoUsuario');

            if (userFName !== null && userLName !== null && spanNombre) {
                // Construye el nombre completo y muestra en las etiquetas <span>
                var nombreCompleto = userFName + ' ' + userLName;
                spanNombre.textContent = nombreCompleto;

            } else if (userFName !== null && userLName !== null && spanSaludo) {
                // Construye el nombre completo y muestra en las etiquetas <span>
                var nombreCompleto = userFName + ' ' + userLName;

                spanSaludo.textContent = nombreCompleto;
            }
            else {
                console.log('No se encontraron datos en sessionStorage o algunos elementos HTML no existen.');
            }
        });
    </script>
    <script>
        //<!-- Función para mostrar el menú de acuerdo al rol del usuario -->
        $(document).ready(function () {
            var userRole = sessionStorage.getItem('userRole');
            //console.log("userRole: " + userRole);

            if (userRole == 1) {
                $("#divAdmin").css("display", "block");
                $("#divDoctor").css("display", "block");
                $("#divUser").css("display", "block");
            } else if (userRole == 2) {
                $("#divAdmin").css("display", "none");
                $("#divDoctor").css("display", "block");
                $("#divUser").css("display", "none");
            } else if (userRole == 3) {
                $("#divAdmin").css("display", "none");
                $("#divDoctor").css("display", "none");
                $("#divUser").css("display", "block");
            } else if (userRole == 1 || userRole == 2 || userRole == 3) {
                $("#contenido").css("display", "block");
            }
        });
    </script>
    

    <!-- BEGIN PAGE LEVEL CUSTOM SCRIPTS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/v/bs5/jszip-3.10.1/dt-1.13.6/af-2.6.0/b-2.4.2/b-html5-2.4.2/b-print-2.4.2/r-2.5.0/sc-2.2.0/datatables.min.js"></script>
    <!-- END PAGE LEVEL CUSTOM SCRIPTS -->
    @* <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.js"></script> *@

    @await RenderSectionAsync("Scripts", required: false)

</body>
</html>