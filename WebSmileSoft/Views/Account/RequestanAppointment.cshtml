@{
    ViewData["Title"] = "Solicitar una Cita";
}
<section class="container flex-grow-1">
    <div class="row justify-content-center">
        @*<div class="col-md-9 col-lg-12 col-xl-10"> *@
        <div class="card shadow-lg o-hidden border-0 my-5 rounded-5">
            <div class="card-body p-0">
                @* <div class="row"> *@
                    @* <div class="container mt-4"> *@
                        <div class="row">
                            <div class="col-lg-8 col-md-9 col-sm-12 text-center mt-5">
                                <h1>Solicitud de Cita Odontológica</h1>
                            </div>
                    <div class="col-lg-4 col-md-3 col-md-3">
                                <img src="~/assets/img/logo-2.png" class="img-fluid img-hover" id="AppointmentLogo" alt="SmileSoftLogo">
                            </div>
                        </div>
                        @* <h1 class="mb-2">Solicitud de Cita Odontológica</h1> *@
                        <div class="row p-3">
                            <form id="cita-form">
                                <!-- Datos Personales -->
                                <div class="card-header py-1">
                                    <p class="text-primary m-0 fw-bold">Datos Personales</p>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6 col-md-6">
                                        <div class="mb-1">
                                            <label for="fname" class="form-label">Nombre</label>
                                            <input type="text" class="form-control" id="fname" name="nombre" required>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6">
                                        <div class="mb-1">
                                            <label for="lname" class="form-label">Apellido</label>
                                            <input type="text" class="form-control" id="lname" name="Apellido" required>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6 col-md-6">
                                        <div class="mb-1">
                                            <div class="form-group">
                                                <label for="ctipoDocumento">* Tipo de Documento:</label>
                                                <select class="form-control" id="ctipoDocumento" name="tipoDocumento" required>
                                                    <option value="1">Cedula de Ciudadania (CC)</option>
                                                    <option value="2">Cedula de Extranjeria (CE)</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6">
                                        <div class="mb-1">
                                            <div class="form-group">
                                                <label for="ceditDocumento">* Número de Documento:</label>
                                                <input type="text" class="form-control" id="ceditDocumento" name="numeroDocumento" required>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6 col-md-6">
                                        <div class="form-group">
                                            <label for="tipoGeneroe">* Genero:</label>
                                            <select class="form-control" id="tipoGeneroe" name="tipoGenero" required>
                                                <option value="1">Masculino</option>
                                                <option value="2">Femenino</option>
                                                <option value="0">Prefiero no decir</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6">
                                        <div class="form-group">
                                            <label for="fechaNacimientoe">Fecha de Nacimiento:</label>
                                            <input type="date" class="form-control" id="fechaNacimientoe" name="fechaNacimiento" placeholder="YYYY-MM-DD" required>
                                        </div>
                                    </div>
                                </div>
                                <!-- Datos de Contacto -->
                                <div class="card-header py-1">
                                    <p class="text-primary m-0 fw-bold">Datos de Contacto</p>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6 col-md-6">
                                        <div class="mb-1">
                                            <label for="correo" class="form-label">Correo Electrónico:</label>
                                            <input type="email" class="form-control" id="correo" name="correo" required>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6">
                                        <div class="mb-1">
                                            <label for="telefono" class="form-label">Número de Teléfono:</label>
                                            <input type="tel" class="form-control" id="telefono" name="telefono">
                                        </div>
                                    </div>
                                </div>

                                <!-- Datos de la Cita -->

                                <div class="card-header py-1">
                                    <p class="text-primary m-0 fw-bold">Datos de la Cita</p>
                                </div>
                                <div class="row">
                                    <div class="col-lg-3 col-md-6">
                                        <div class="mb-1">
                                            <label for="fecha" class="form-label">Fecha de la Cita:</label>
                                            <input type="date" class="form-control" id="fecha" name="fecha" placeholder="yyyy-MM-dd">
                                        </div>
                                    </div>
                                    <div class="col-lg-3 col-md-6 mb-1">

                                        <label for="cHora" class="form-label">Hora:</label>
                                        <input type="time" class="form-control" id="cHora" name="Hora"
                                               min="08:00" max="20:00" step="3600" required>
                                    </div>
                                    <div class="col-lg-3 col-md-6">
                                        <!-- Selector Doctores Disponibles -->
                                        <div class="form-group">
                                            <label for="selEspecialidad" class="mb-2">Especialidad</label>
                                            <select class="form-control" id="selEspecialidad" name="RequesanAppointment" onchange="fncheckDoctor(this)" required>
                                                <option value="0">Seleccionar Especialidad</option>
                                                <option value="1">Odontología general</option>
                                                <option value="2">Endodoncia</option>
                                                <option value="3">Cirugía oral</option>
                                                <option value="4">Ortodoncia</option>
                                                <option value="5">Odontopediatría</option>
                                                <option value="6">Periodoncia</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-lg-3 col-md-6">
                                        <label for="cDoctor" class="form-label">Doctor</label>
                                        <select class="form-control" id="cDoctor" name="RequesanAppointment" disabled>
                                            <option value="0">Seleccionar Doctor</option>

                                        </select>
                                    </div>
                                </div>
                                <div class="mb-2">
                                    <label for="mensaje" class="form-label">Motivo:</label>
                                    <textarea class="form-control" id="mensaje" name="mensaje" rows="2"></textarea>
                                </div>
                                <div class="d-flex justify-content-end mb-1">
                                    <button type="button" class="btn btn-primary mb-2" id="submit-btn" onclick="SolicitarCita();">Solicitar Cita</button>
                                </div>
                            </form>
                        </div>
                        <div class="progress mb-1" style="display:none;">
                            <div id="progress-bar" class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>

                    </div>
                    <hr>
                    <div class="text-center mb-4"><a class="small fs-6 btn btn-primary border rounded-5" href="@Url.Action("Login","Account")">Ya tienes Cuenta? Inicia Sesión!</a></div>

                </div>
            </div>
       @*  </div> *@
    @* </div> *@
    @*  </div> *@
</section>

@section Scripts{

    <script>
        $(document).ready(function () {
            // Get the current date
            const currentDate = new Date();

            // Calculate the date 18 years ago
            const maxDate = new Date(currentDate.getFullYear() - 18, currentDate.getMonth(), currentDate.getDate());

            // Format the date as YYYY-MM-DD
            const maxDateString = maxDate.toISOString().split('T')[0];

            // Set the max attribute of the input element
            document.getElementById('fechaNacimientoe').setAttribute('max', maxDateString);
            const today = new Date().toISOString().split('T')[0];
            document.getElementById("fecha").setAttribute("min", today);
        });
        function fncheckDoctor(selectObject) {
            var value = selectObject.value;
            if (value == 0) {
                document.getElementById('cDoctor').disabled = true;
            } else {
                fngetDoctors(value);
                document.getElementById('cDoctor').disabled = false;
            }
        }


        $("#fecha").on("change", function () {
            validarFecha();
        });

        function obtenerFechaActualSinUTC(fechaActual) {
            //const fechaActual = new Date();
            const fechaSinUTC = new Date(fechaActual.getTime() - fechaActual.getTimezoneOffset() * 60000);
            return fechaSinUTC.toISOString().split("T")[0]; // Obtiene la fecha en formato "YYYY-MM-DD"
        }


        // const fechaActualSinUTC = obtenerFechaActualSinUTC();
        ////console.log(fechaActualSinUTC);

        function validarFecha() {
            const fechaActual = obtenerFechaActualSinUTC(new Date());
            //console.log(fechaActual);
            const fechaIngresada = obtenerFechaActualSinUTC(new Date(document.getElementById("fecha").value + "T05:00:00Z"));
            //console.log(fechaIngresada);
            if (fechaIngresada < fechaActual) {
                //alert("La fecha no puede ser menor que hoy.");
                Swal.fire({
                    icon: 'info',
                    title: 'Oops...',
                    text: 'La fecha no puede ser menor que hoy.',
                    confirmButtonColor: '#008dc9'
                })
                document.getElementById("fecha").value = ""; // Limpia el campo de fecha
            }
        }

        function validarHora() {
            const horaIngresada = document.getElementById("cHora").value;
            const horaActual = new Date().getUTCHours();
            const fechaHoraActualMasDosHoras = new Date();
            fechaHoraActualMasDosHoras.setUTCHours(fechaHoraActualMasDosHoras.getUTCHours() + 2);

            if (horaIngresada < horaActual || horaIngresada < "08:00" || horaIngresada > "14:00" || horaIngresada > fechaHoraActualMasDosHoras.getUTCHours()) {
                //alert("La hora debe estar entre las 08:00 y las 17:00 y no puede ser menor que 2 horas desde ahora.");
                Swal.fire({
                    icon: 'info',
                    title: 'Oops...',
                    text: 'La hora debe estar entre las 08:00 AM y las 4:00 PM y puede ser maximo 2 horas antes de la cita.',
                    confirmButtonColor: '#008dc9'
                })
                document.getElementById("cHora").value = ""; // Limpia el campo de hora
            }
        }
        //VAlidar Formato de la hora tiene que ser exacta
        $('#cHora').on('focusout', function () {
            let value = $(this).val();
            value = value.substring(0, value.indexOf(':'));
            this.value = value + ':00';
        });

        $("#cHora").on("change", function () {
            validarHora();
        });


        function fngetDoctors(spID) {
            $.ajax({
                type: 'GET',
                url: '@ViewBag.urlEndPoint' + '/api/Generics/v1/GetDoctors?spID=' + spID, // Ruta para crear o actualizar usuarios
                contentType: 'application/json',
                success: function (response) {
                    var select = document.getElementById("cDoctor");
                    select.options.length = 0;
                    var option = document.createElement("option");
                    option.value = 0;
                    option.text = "Seleccionar Doctor";
                    select.appendChild(option);
                    for (var i = 0; i < response.length; i++) {
                        var option = document.createElement("option");
                        option.value = response[i].value;
                        option.text = response[i].text;
                        select.appendChild(option);
                    }

                },
                error: function (error) {
                    // Manejar errores de la solicitud AJAX
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Se presento un error al obtener la información',
                        confirmButtonColor: '#008dc9'
                    })
                }
            });
        }

        function showTimePicker() {
            document.getElementById('timePicker').style.display = 'block';
        }

        function setSelectedTime() {
            const selectedHour = document.getElementById('hour').value;
            document.getElementById('cHora').value = selectedHour + ':00';
            document.getElementById('timePicker').style.display = 'none';
        }
    </script>

    <script>
        // Función para calcular el progreso y actualizar la barra de progreso
        function calcularProgreso() {
            const form = document.getElementById("cita-form");
            const progressBar = document.getElementById("progress-bar");
            const camposRequeridos = form.querySelectorAll("[required]");
            const camposCompletados = Array.from(camposRequeridos).filter((campo) => campo.value !== "").length;
            const progreso = (camposCompletados / camposRequeridos.length) * 100;
            progressBar.style.width = progreso + "%";
            //progressBar.textContent = Math.round(progreso) + "%";

            // Obtener el botón de enviar
            const submitBtn = document.getElementById("submit-btn");
            // Habilitar o deshabilitar el botón de acuerdo con el progreso
            if (progreso === 100) {
                submitBtn.removeAttribute("disabled");
            } else {
                submitBtn.setAttribute("disabled", "disabled");
            }
        }
        const fechaNacimientoInputA = document.getElementById('fechaNacimientoe');

        // Agrega un oyente de eventos al cambio de valor en el campo
        fechaNacimientoInputA.addEventListener('change', function () {
            // Obtén la fecha de nacimiento ingresada por el usuario
            const fechaNacimiento = new Date(this.value);

            // Calcula la fecha actual
            const fechaActual = new Date();

            // Calcula la edad en años
            const edad = fechaActual.getFullYear() - fechaNacimiento.getFullYear();

            // Verifica si la edad es menor de 18 años
            if (edad < 18) {
                //alert('Debes ser mayor de 18 años para registrarte.');
                Swal.fire({
                    title: 'Error',
                    text: 'Debes ser mayor de 18 años para Solicitar una Cita.',
                    icon: 'error',
                    confirmButtonText: 'Aceptar'
                });
                // Puedes agregar aquí más acciones si la validación falla, como borrar la fecha o mostrar un mensaje de error.
            }
        });


        // Escucha eventos de cambio en los campos del formulario
        const campos = document.querySelectorAll("input, textarea");
        campos.forEach((campo) => {
            campo.addEventListener("input", calcularProgreso);
        });

    </script>


    <script>
        function ageValidation(birthDate) {
            // Obtener la fecha actual
            let fechaActual = new Date();

            // Calcular la fecha de nacimiento a partir de la cadena de fecha
            let fechaNac = new Date(birthDate);

            // Calcular la diferencia en años
            let edad = fechaActual.getFullYear() - fechaNac.getFullYear();

            // Verificar si el cumpleaños ya ocurrió este año o no
            if (
                (fechaNac.getMonth() > fechaActual.getMonth()) ||
                (fechaNac.getMonth() === fechaActual.getMonth() && fechaNac.getDate() > fechaActual.getDate())
            ) {
                edad--;
            }

            // Comprobar si la edad es mayor o igual a 18 y menor o igual a 100
            return edad >= 18 && edad <= 100;
        }

        function SolicitarCita() {

            //Datos Personales
            let firstName = document.getElementById("fname").value.trim();
            let lastName = document.getElementById("lname").value.trim();

            let documentType = parseInt(document.getElementById("ctipoDocumento").value.trim(), 10);
            let documentID = document.getElementById("ceditDocumento").value.trim();

            let gender = document.getElementById("tipoGeneroe").value.trim();
            let birthDate = document.getElementById("fechaNacimientoe").value.trim();

            //Datos de Contacto
            let email = document.getElementById("correo").value.trim();
            let mobileNumber = document.getElementById("telefono").value.trim();

            //Datos de la Cita
            let date = document.getElementById("fecha").value.trim();
            let time = document.getElementById("cHora").value.trim() + ':00';
            let doctor = document.getElementById("cDoctor").value.trim();
            let message = document.getElementById("mensaje").value.trim();

            //console.log("Tiempo que envia " + time);
            //Datos de la Cuenta
            //let userRegister = document.getElementById("userNameRegister").value.trim();
            //let password = document.getElementById("password").value.trim();

            //console.log("Doctor: " + doctor);
            //Validar que todos los campos del Formulario esten llenos
            if (firstName === "" || lastName === "" || documentID === "" || email === "" || mobileNumber === "" || date === "" || time === "" || doctor === "" || message === "") {
                //alert("Todos los campos son obligatorios");
                Swal.fire({
                    icon: 'info',
                    title: 'Oops...',
                    text: 'Todos los campos son obligatorios',
                    confirmButtonColor: '#008dc9'
                })
                return;
            } else if (doctor == 0) {
                Swal.fire({
                    icon: 'info',
                    title: 'Oops...',
                    text: 'Debes seleccionar un Doctor',
                    confirmButtonColor: '#008dc9'
                })
            } else if (!ageValidation(birthDate)) {
                Swal.fire({
                    text: 'Edad Incorrecta, Recuerda que debes ser mayor de Edad.',
                    confirmButtonColor: '#008dc9'
                });
                return;
            } else {
                // let formattedBirthDate = formatToDatetime(birthDate);
                let data = {
                    //Datos de la cuenta
                    uID: 0,
                    utID: 3,
                    oID: 1,
                    //uLoginName: documentID,
                    //uPassword: documentID,
                    //uStatus: true,

                    //Datos Personales
                    uName: firstName,
                    ulastName: lastName,
                    uDocument: documentID,
                    dtID: documentType,
                    uBirthDate: birthDate,
                    gID: parseInt(gender),
                    //Datos de Contacto
                    uEmailAddress: email,
                    uCellphone: mobileNumber,

                    //Datos de la Cita
                    asID: 0,
                    aID: 0,
                    aDate: date,
                    aTime: time,
                    dID: parseInt(doctor),
                    aDescription: message

                };

                $.ajax({
                    type: 'POST',
                    url: '@ViewBag.urlEndPoint' + '/api/Appointments/v1/SetAppointment', // Ruta para crear o actualizar usuarios
                    data: JSON.stringify(data),
                    contentType: 'application/json',
                    success: function (response) {
                        //console.log(response.OutputCodeError);
                        if (response.codeStatus === '0') {
                            // Registro exitoso, puedes redirigir al usuario o mostrar un mensaje de éxito
                            //alert('Usuario registrado con éxito.');
                            Swal.fire({
                                icon: 'success',
                                title: 'Cita Solicitada con éxito',
                                text: response.messageStatus,
                                confirmButtonColor: '#008dc9',
                                allowOutsideClick: false,
                                allowEscapeKey: false,
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = '@Url.Action("Login", "Account")';
                                }
                            });
                        } else if (response.codeStatus === '-1') {
                            Swal.fire({
                                icon: 'info',
                                title: 'Oops...',
                                text: response.messageStatus,
                                confirmButtonColor: '#008dc9'
                            })
                        }
                    },
                    error: function (error) {
                        // Manejar errores de la solicitud AJAX
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Se presento un error al guardar la información',
                            confirmButtonColor: '#008dc9'
                        })
                    }
                });
            }

        }
    </script>

}
