@{
    ViewData["Title"] = "Solicitar una Cita";
}

<section class="container flex-grow-1">
    <div class="d-flex justify-content-center align-items-center vh-100">
        <div class="shadow " style="width:70rem">
            @*  <div class="d-flex flex-column align-items-center mb-2 mt-2">
            <img src="~/assets/img/logo-2.png" class="img-fluid" width="200" alt="SmileSoftLogo">
            </div> *@
            <div class="container mt-4">
                <div class="row">
                    <div class="col-md-9 py-10">
                        <h1 class="mb-2">Solicitud de Cita Odontológica</h1>
                    </div>
                    <div class="col-md-3 d-flex justify-content-end align-content-lg-end">
                        <img src="~/assets/img/logo-2.png" class="img-fluid img-hover w-auto" alt="SmileSoftLogo">
                    </div>
                </div>
                @* <h1 class="mb-2">Solicitud de Cita Odontológica</h1> *@
                <form id="cita-form">
                    <!-- Datos Personales -->
                    <div class="card-header py-1">
                        <p class="text-primary m-0 fw-bold">Datos Personales</p>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-1">
                                <label for="fname" class="form-label">Nombre</label>
                                <input type="text" class="form-control" id="fname" name="nombre" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-1">
                                <label for="lname" class="form-label">Apellido</label>
                                <input type="text" class="form-control" id="lname" name="Apellido" required>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-1">
                                <div class="form-group">
                                    <label for="ctipoDocumento">* Tipo de Documento:</label>
                                    <select class="form-control" id="ctipoDocumento" name="tipoDocumento" required>
                                        <option value="1">Cedula de Ciudadania (CC)</option>
                                        <option value="2">Cedula de Extranjeria (CE)</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-1">
                                <div class="form-group">
                                    <label for="ceditDocumento">* Número de Documento:</label>
                                    <input type="text" class="form-control" id="ceditDocumento" name="numeroDocumento" required>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="tipoGeneroe">* Genero:</label>
                                <select class="form-control" id="tipoGeneroe" name="tipoGenero" required>
                                    <option value="1">Masculino</option>
                                    <option value="2">Femenino</option>
                                    <option value="0">Prefiero no decir</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="fechaNacimientoe">Fecha de Nacimiento:</label>
                                <input type="date" class="form-control" id="fechaNacimientoe" name="fechaNacimiento" required>
                            </div>
                        </div>
                    </div>
                    <!-- Datos de Contacto -->
                    <div class="card-header py-1">
                        <p class="text-primary m-0 fw-bold">Datos de Contacto</p>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-1">
                                <label for="correo" class="form-label">Correo Electrónico:</label>
                                <input type="email" class="form-control" id="correo" name="correo" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-1">
                                <label for="telefono" class="form-label">Número de Teléfono:</label>
                                <input type="tel" class="form-control" id="telefono" name="telefono">
                            </div>
                        </div>
                    </div>

                    <!-- Datos de la Cita -->

                    <div class="card-header py-1">
                        <p class="text-primary m-0 fw-bold">Datos de la Cita</p>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="mb-1">
                                <label for="fecha" class="form-label">Fecha de la Cita:</label>
                                <input type="date" data-date-start-date="-1w" class="form-control" id="fecha" name="fecha" required>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="mb-1">
                                <label for="cHora" class="form-label">Hora:</label>
                                <input type="time" class="form-control" id="cHora" name="Hora" placeholder="HH:mm:ss" pattern="^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-1">
                                <!-- Selector Doctores Disponibles -->
                                <label for="cDoctor" class="form-label">Doctor</label>
                                <input type="text" class="form-control" id="cDoctor" name="Doctor">
                            </div>
                        </div>
                    </div>
                    <div class="mb-1">
                        <label for="mensaje" class="form-label">Mensaje:</label>
                        <textarea class="form-control" id="mensaje" name="mensaje" rows="2"></textarea>
                    </div>
                    <div class="d-flex justify-content-end ">
                        <button type="button" class="btn btn-primary mb-2" id="submit-btn" onclick="SolicitarCita();">Solicitar Cita</button>
                    </div>
                </form>

                <div class="progress mb-2">
                    <div id="progress-bar" class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                </div>

            </div>
            <hr>
            <div class="text-center mb-4"><a class="small fs-5" href="@Url.Action("Login","Account")">Ya tienes Cuenta? Inicia Sesión!</a></div>
            <div class="form-check" style="display:none"><input class="form-check-input custom-control-input" type="checkbox" id="remember_me"><label class="form-check-label custom-control-label" for="remember_me">Recordarme</label></div>

        </div>
    </div>
</section>

@section Scripts{
    <script>
        // Función para calcular el progreso y actualizar la barra de progreso
        function calcularProgreso() {
            const form = document.getElementById("cita-form");
            const progressBar = document.getElementById("progress-bar");
            const camposRequeridos = form.querySelectorAll("[required]");
            const camposCompletados = Array.from(camposRequeridos).filter((campo) => campo.value !== "").length;
            const progreso = (camposCompletados / camposRequeridos.length) * 100;
            progressBar.style.width = progreso + "%";
            //progressBar.textContent = Math.round(progreso) + "%";

            // Obtener el botón de enviar
            const submitBtn = document.getElementById("submit-btn");
            // Habilitar o deshabilitar el botón de acuerdo con el progreso
            if (progreso === 100) {
                submitBtn.removeAttribute("disabled");
            } else {
                submitBtn.setAttribute("disabled", "disabled");
            }
        }
        const fechaNacimientoInput = document.getElementById('fechaNacimientoe');

        // Agrega un oyente de eventos al cambio de valor en el campo
        fechaNacimientoInput.addEventListener('change', function () {
            // Obtén la fecha de nacimiento ingresada por el usuario
            const fechaNacimiento = new Date(this.value);

            // Calcula la fecha actual
            const fechaActual = new Date();

            // Calcula la edad en años
            const edad = fechaActual.getFullYear() - fechaNacimiento.getFullYear();

            // Verifica si la edad es menor de 18 años
            if (edad < 18) {
                //alert('Debes ser mayor de 18 años para registrarte.');
                Swal.fire({
                    title: 'Error',
                    text: 'Debes ser mayor de 18 años para Solicitar una Cita.',
                    icon: 'error',
                    confirmButtonText: 'Aceptar'
                });
                // Puedes agregar aquí más acciones si la validación falla, como borrar la fecha o mostrar un mensaje de error.
            }
        });


        // Escucha eventos de cambio en los campos del formulario
        const campos = document.querySelectorAll("input, textarea");
        campos.forEach((campo) => {
            campo.addEventListener("input", calcularProgreso);
        });

    </script>


    <script>


        function formatToDatetime(dateString) {
            const date = new Date(dateString);
            const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Sumar 1 ya que los meses comienzan en 0
            const day = date.getDate().toString().padStart(2, '0');
            const year = date.getFullYear();
            return `${year}-${month}-${day}`;
        }

        function ageValidation(birthDate) {
            // Obtener la fecha actual
            let fechaActual = new Date();

            // Calcular la fecha de nacimiento a partir de la cadena de fecha
            let fechaNac = new Date(birthDate);

            // Calcular la diferencia en años
            let edad = fechaActual.getFullYear() - fechaNac.getFullYear();

            // Verificar si el cumpleaños ya ocurrió este año o no
            if (
                (fechaNac.getMonth() > fechaActual.getMonth()) ||
                (fechaNac.getMonth() === fechaActual.getMonth() && fechaNac.getDate() > fechaActual.getDate())
            ) {
                edad--;
            }

            // Comprobar si la edad es mayor o igual a 18
            return edad >= 18;
        }
        function SolicitarCita() {

            //Datos Personales
            let firstName = document.getElementById("fname").value.trim();
            let lastName = document.getElementById("lname").value.trim();

            let documentType = parseInt(document.getElementById("ctipoDocumento").value.trim(), 10);
            let documentID = document.getElementById("ceditDocumento").value.trim();

            let gender = document.getElementById("tipoGeneroe").value.trim();
            let birthDate = document.getElementById("fechaNacimientoe").value.trim();

            //Datos de Contacto
            let email = document.getElementById("correo").value.trim();
            let mobileNumber = document.getElementById("telefono").value.trim();

            //Datos de la Cita
            let date = document.getElementById("fecha").value.trim();
            let time = document.getElementById("cHora").value.trim();
            let doctor = document.getElementById("cDoctor").value.trim();
            let message = document.getElementById("mensaje").value.trim();

            console.log("Tiempo que envia " + time);
            //Datos de la Cuenta
            //let userRegister = document.getElementById("userNameRegister").value.trim();
            //let password = document.getElementById("password").value.trim();



            if (!ageValidation(birthDate)) {
                Swal.fire({
                    text: 'No tienes la mayoría de edad, ponte en contacto con soporte.',
                    confirmButtonColor: '#008dc9'
                });
            }
            // {
            //     "aID": 0,
            //         "oID": 0,
            //             "dtID": 0,
            //                 "gID": 0,
            //                     "uDocument": "string",
            //                         "uEmailAddress": "string",
            //                             "uName": "string",
            //                                 "uLastName": "string",
            //                                     "uCellphone": "string",
            //                                         "uID": 0,
            //                                             "dID": 0,
            //                                                 "asID": 0,
            //                                                     "aDescription": "string",
            //                                                         "aDate": "2023-09-30",
            //                                                             "uBirthDate": "2023-09-30",
            //                                                                 "aTime": "string"
            // }

            //let formattedBirthDate = formatDateToISO8601(birthDate);
            else {
                let formattedBirthDate = formatToDatetime(birthDate);
                let data = {
                    //Datos de la cuenta
                    uID: 0,
                    utID: 3,
                    oID: 1,
                    //uLoginName: documentID,
                    //uPassword: documentID,
                    //uStatus: true,
                    //Datos Personales
                    uName: firstName,
                    ulastName: lastName,
                    uDocument: documentID,
                    dtID: documentType,
                    uBirthDate: formattedBirthDate,
                    gID: gender,
                    //Datos de Contacto
                    uEmailAddress: email,
                    uCellphone: mobileNumber,
                    //Datos de la Cita
                    asID: 0,
                    aID: 0,
                    aDate: date,
                    aTime: time,
                    dID: 0,
                    uDescription: message

                };
                $.ajax({
                    type: 'POST',
                    url: '@ViewBag.urlEndPoint' + '/api/Appointments/v1/SetAppointment', // Ruta para crear o actualizar usuarios
                    data: JSON.stringify(data),
                    contentType: 'application/json',
                    success: function (response) {
                        console.log(response.OutputCodeError);
                        if (response.codeStatus === '0') {
                            // Registro exitoso, puedes redirigir al usuario o mostrar un mensaje de éxito
                            //alert('Usuario registrado con éxito.');
                            Swal.fire({
                                icon: 'success',
                                title: 'Cita Solicitada con éxito',
                                text: 'Para ingresar a nuestro sitio debes usar tu correo y como contraseña el numero de identificacion que registraste.',
                                confirmButtonColor: '#008dc9',
                                allowOutsideClick: false,
                                allowEscapeKey: false,
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = '@Url.Action("Login", "Account")';
                                }
                            });
                        } else if (response.codeStatus === '-1') {
                            // El usuario ya existe en la base de datos
                            //alert('Este usuario ya existe en la base de datos.');
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Este usuario ya existe en la base de datos.',
                                confirmButtonColor: '#008dc9'
                            })
                        } else {
                            // Manejar otros códigos de error si es necesario
                            alert('Error: ' + response.OutputMessageError);
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Error: ' + response.OutputMessageError,
                                confirmButtonColor: '#008dc9'
                            })
                        }
                    },
                    error: function (error) {
                        // Manejar errores de la solicitud AJAX
                        console.error('Error al registrar usuario:', error);
                    }
                });
            }

        }
    </script>


}
