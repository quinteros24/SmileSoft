<div class="container mt-5">
    <h1 class="mb-4">Gestión de Citas</h1>
    <div class="col-md-12">
        <!-- Lista de Citas Programadas -->
        <div class="card">
            <div class="card-header">
                Citas Programadas
            </div>
            <div class="card-body">
                <!-- Aquí va la tabla -->
                    <table id="citasDoctor" class="table"></table>
            </div>
        </div>
    </div>
</div>

@*
    <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Editar de Cita</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="mb-3">
                            <label for="username" class="form-label">Usuario</label>
                            <input type="text" class="form-control" id="username" name="username" disabled>
                        </div>
                        <div class="form-group">
                            <label for="estadodeCita">Estado de la Cita</label>
                            <select class="form-control" id="tipoUsuarioe" name="estadodeCita" required>
                                <option value="1">Pendiente</option>
                                <option value="2">Programada</option>
                                <option value="3">Cancelada</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="button" class="btn btn-primary" id="saveChangesBtn">Guardar Cambios</button>
                </div>
            </div>
        </div>
    </div>
*@
@section Scripts{
    <script>

        function abrirCita() {
            window.location.href = '@Url.Action("AdministrarCitas", "Doctor")';
        } //SetAppointment
        $.ajax({
            url: sessionStorage.urlEP + '/api/Appointments/v1/GetAppointmentsList',
            type: 'GET',
            contentType: "application/json",
            dataType: 'json',
            success: function (data) {
                $("#loadingScreen").hide();
                let dataSet = [];

                $.each(data.itemJson, function (index, cita) {
                    let fechaCita = cita.aDate;
                    let fechaFormateada = fechaCita.substring(0, 10);
                    let rowData = [
                        cita.aID,           // Agrega aID
                        fechaFormateada,
                        cita.uDoctorName,   // Agrega uDoctorName
                        //cita.aDescription,  // Agrega aDescription
                        cita.uName,
                        cita.asID == 1 ? 'Programada' : 'Cancelada',
                        '<button class="btn btn-sm btn-primary" data-toggle="modal" data-target="#editModal">Editar</button>'
                    ];
                    dataSet.push(rowData);
                });
                console.log(dataSet);
                // Inicializa o actualiza el DataTable con los datos procesados
                let tablecitasd = $('#citasDoctor').DataTable({
                    columnDefs: [
                        {
                            target: 0,
                            visible: true,
                            searchable: true
                        }
                    ],
                    columns: [
                        { title: 'ID' },
                        { title: 'Fecha' },
                        //{ title: 'Hora' },
                        { title: 'Doctor' },    // Cambia el título de la columna
                        //{ title: 'Descripción' }, // Agrega el título de la columna
                        { title: 'Paciente' },
                        { title: 'Estado' },
                        {
                            title: 'Acciones',
                            orderable: false, // Para desactivar la ordenación en esta columna
                            data: null, // Usaremos la columna "Acciones" solo para botones
                            defaultContent: '<button class="btn btn-primary btn-sm btnDesactivarD" data-toggle="tooltip" title="Cancelar Cita" type="button"> <i class="fas fa-ban"> </i></button> ' +
                                '<button class="btn btn-danger btn-sm btnEditarD" data-toggle="modal" data-target="#editarCitaModal" data-toggle="tooltip" title="Reprogramar Cita"> <i class="fa-regular fa-pen-to-square"></i></button> '
                        }
                    ],
                    data: dataSet,
                    dom: 'Bfrtip',
                    buttons: {
                        buttons: [
                            {
                                extend: 'print', className: 'btn btn-sm',
                                messageTop: 'Tabla de Citas Programadas',
                            },
                        ]
                    },
                    select: true,
                    destroy: true,
                    language: {
                        url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json',
                    },
                });

                Swal.close();

                tablecitasd.column(6).nodes().to$().find('.btnDesactivarD').click(function () {
                    // Maneja la acción del botón aqui
                    let data = tablecitasd.row($(this).parents('tr')).data();
                    let CitaID = data[0]; // la primera columna contiene el ID del usuario
                    Swal.fire({
                        title: 'Cancelar Cita',
                        text: '¿Está seguro que desea cancelar la cita?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Si, Cancelar Cita',
                        cancelButtonText: 'Cancelar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: sessionStorage.urlEP + '/api/Appointments/v1/UpdateAppointmentStatus',
                                type: 'PUT',
                                data: { 'aID': CitaID },
                                contentType: "application/json",
                                dataType: 'json',
                                success: function (response) {
                                    if (response.codeStatus == 0) {
                                        Swal.fire({
                                            title: 'Cita Cancelada',
                                            text: 'La cita ha sido Cancelada exitosamente.',
                                            icon: 'success',
                                            confirmButtonText: 'Aceptar'
                                        }).then((result) => {
                                            if (result.isConfirmed) {
                                                location.reload();
                                            }
                                        })
                                    }
                                    else if (response.codeStatus == -1) {
                                        Swal.fire({
                                            title: 'Error',
                                            text: response.messageStatus,
                                            icon: 'error',
                                            confirmButtonText: 'Aceptar'
                                        })
                                    }

                                },
                                error: function (error) {
                                    console.log('Error al obtener los detalles del usuario.');
                                }

                            }).then((result) => {
                                if (result.isConfirmed) {
                                    location.reload();
                                }
                            })
                        }
                    })


                });
                tablecitasd.column(6).nodes().to$().find('.btnEditarD').click(function () {
                    // Maneja la acción del botón aqui
                    let data = tablecitasd.row($(this).parents('tr')).data();
                    let CitaID = data[0]; // la primera columna contiene el ID del usuario
                    Swal.fire({
                        title: 'Reprogramar Cita',
                        text: '¿Está seguro que desea reprogramar la cita?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Si, reprogramar',
                        cancelButtonText: 'Cancelar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: sessionStorage.urlEP + '/api/Appointments/v1/UpdateAppointmentStatus',
                                type: 'POST',
                                data: { 'aID': CitaID },
                                contentType: "application/json",
                                dataType: 'json',
                                success: function (response) {
                                    if (response.codeStatus == 0) {
                                        Swal.fire({
                                            title: 'Cita Cancelada',
                                            text: 'La cita ha sido Cancelada exitosamente.',
                                            icon: 'success',
                                            confirmButtonText: 'Aceptar'
                                        }).then((result) => {
                                            if (result.isConfirmed) {
                                                location.reload();
                                            }
                                        })
                                    }
                                    else if (response.codeStatus == -1) {
                                        Swal.fire({
                                            title: 'Error',
                                            text: response.messageStatus,
                                            icon: 'error',
                                            confirmButtonText: 'Aceptar'
                                        })
                                    }

                                },
                                error: function (error) {
                                    console.log('Error al obtener los detalles del usuario.');
                                }

                            }).then((result) => {
                                if (result.isConfirmed) {
                                    location.reload();
                                }
                            })
                        }
                    })


                });
                
                
            }
        });

    </script>

    }